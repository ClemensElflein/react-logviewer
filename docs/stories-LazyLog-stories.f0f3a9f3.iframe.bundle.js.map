{"version":3,"file":"stories-LazyLog-stories.f0f3a9f3.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC1BA;AAEA;AAAA;AAWA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAoBA;AACA;AACA;AACA;AACA;AACA;AALA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAdA;AAEA;AACA;AACA;AAJA;;;;;;;;;;;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC1BA;AAEA;AACA;;AAEA;AAAA;AAwBA;AACA;AACA;AACA;AACA;AAJA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAKA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAEA;AACA;AAGA;AAAA;AAAA;AAAA;AAjCA;AAEA;AACA;AACA;AAJA;;;;;;;;;;;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC1BA;AAEA;AAEA;AAAA;AASA;AACA;AACA;AAFA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAEA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAfA;AAEA;AACA;AAAA;AAGA;AACA;AAPA;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC1BA;AAEA;AAAA;AAqBA;AACA;AACA;AACA;AACA;AAJA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAEA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AArBA;AAEA;AACA;AACA;AACA;AALA;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC1BA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AAwBA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAIA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AA1DA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC1BA;AAEA;;AAEA;AACA;AACA;AAFA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AAEA;;;;;;;;;;;;;;;;;;ACnEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AAMA;AALA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAIA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AASA;AAAA;AAGA;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAKA;AACA;AAIA;;AAEA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAOA;AAEA;AACA;AACA;AAAA;AAEA;AAKA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;;;;ACrOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC1BA;AAEA;AAAA;AAEA;AAEA;AAEA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC1BA;AAEA;AAAA;AAEA;AAEA;AAEA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC1BA;AAEA;AAAA;AAEA;AAEA;AAEA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC1BA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AA4DA;AAAA;AAoBA;AAAA;AAAA;AACA;AAAA;AALA;AACA;AAAA;AASA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AA1CA;AAAA;AACA;AAAA;AAAA;AAAA;AA4CA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AAGA;AAAA;AAAA;AAAA;AAMA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAGA;AACA;AAAA;AAEA;AAGA;AAEA;AACA;AAKA;AAAA;AAEA;AAGA;AACA;AAKA;AAAA;AAEA;AACA;AAEA;AAGA;AAAA;AAAA;AAAA;AA7JA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;;;;;;;;;;;;;;;;;;;;;;;;;;ACrrIA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACNA;AAAA;AAAA;AADA;AAEA;AAEA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAHA;AAAA;AAKA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;;ACzCA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAKA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;;;AClGA;AAAA;AAAA;AADA;AACA;AAEA;AAEA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAfA;AAAA;AAAA;AAiBA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAHA;AAAA;AAKA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAKA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;;AC3EA;AACA;AAGA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAKA;AAAA;AAAA;AAKA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;;AA0BA;AACA;AACA;AAFA;AAAA;AAAA;AAsMA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmgBA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AAGA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AAIA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAyEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAIA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AAAA;AAGA;AAAA;AAAA;AAEA;AACA;AAGA;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA9lBA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAKA;AACA;;AAEA;AACA;AAKA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AAKA;AACA;AAEA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAoGA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAgOA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAoGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAIA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAOA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAKA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AAEA;AAGA;AAAA;AAAA;AAAA;AAztBA;AAdA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAhFA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzPA;AAAA;AAAA;AAmDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AArCA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAZA;AAKA;AACA;AANA;;;;;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://@melloware/react-logviewer/./src/components/LinePart/index.module.css?d9dd","webpack://@melloware/react-logviewer/./src/components/LinePart/index.tsx","webpack://@melloware/react-logviewer/./src/components/LineContent/index.module.css?1cf2","webpack://@melloware/react-logviewer/./src/components/LineContent/index.tsx","webpack://@melloware/react-logviewer/./src/components/LineGutter/index.module.css?cfeb","webpack://@melloware/react-logviewer/./src/components/LineGutter/index.tsx","webpack://@melloware/react-logviewer/./src/components/LineNumber/index.module.css?0627","webpack://@melloware/react-logviewer/./src/components/LineNumber/index.tsx","webpack://@melloware/react-logviewer/./src/components/Line/index.module.css?5393","webpack://@melloware/react-logviewer/./src/components/Line/index.tsx","webpack://@melloware/react-logviewer/./src/components/Loading/index.module.css?12f5","webpack://@melloware/react-logviewer/./src/components/Loading/index.tsx","webpack://@melloware/react-logviewer/./src/components/Utils/utils.ts","webpack://@melloware/react-logviewer/./src/components/SearchBar/ArrowIcons/DownArrowIcon/index.module.css?0ac3","webpack://@melloware/react-logviewer/./src/components/SearchBar/ArrowIcons/DownArrowIcon/index.tsx","webpack://@melloware/react-logviewer/./src/components/SearchBar/ArrowIcons/UpArrowIcon/index.module.css?d831","webpack://@melloware/react-logviewer/./src/components/SearchBar/ArrowIcons/UpArrowIcon/index.tsx","webpack://@melloware/react-logviewer/./src/components/SearchBar/FilterLinesIcon/index.module.css?2c99","webpack://@melloware/react-logviewer/./src/components/SearchBar/FilterLinesIcon/index.tsx","webpack://@melloware/react-logviewer/./src/components/SearchBar/index.module.css?0941","webpack://@melloware/react-logviewer/./src/components/SearchBar/index.tsx","webpack://@melloware/react-logviewer/./src/components/Utils/ansiparse.ts","webpack://@melloware/react-logviewer/./src/components/Utils/encoding.ts","webpack://@melloware/react-logviewer/./src/components/Utils/request.ts","webpack://@melloware/react-logviewer/./src/components/Utils/search.ts","webpack://@melloware/react-logviewer/./src/components/Utils/stream.ts","webpack://@melloware/react-logviewer/./src/components/Utils/websocket.ts","webpack://@melloware/react-logviewer/./src/components/LazyLog/index.module.css?a3f9","webpack://@melloware/react-logviewer/./src/components/LazyLog/index.tsx","webpack://@melloware/react-logviewer/./src/components/ScrollFollow/index.tsx","webpack://@melloware/react-logviewer/./src/components/index.ts","webpack://@melloware/react-logviewer/./src/components/LazyLog/index.module.css","webpack://@melloware/react-logviewer/./src/components/LineContent/index.module.css","webpack://@melloware/react-logviewer/./src/components/LineGutter/index.module.css","webpack://@melloware/react-logviewer/./src/components/LineNumber/index.module.css","webpack://@melloware/react-logviewer/./src/components/LinePart/index.module.css","webpack://@melloware/react-logviewer/./src/components/Line/index.module.css","webpack://@melloware/react-logviewer/./src/components/Loading/index.module.css","webpack://@melloware/react-logviewer/./src/components/SearchBar/ArrowIcons/DownArrowIcon/index.module.css","webpack://@melloware/react-logviewer/./src/components/SearchBar/ArrowIcons/UpArrowIcon/index.module.css","webpack://@melloware/react-logviewer/./src/components/SearchBar/FilterLinesIcon/index.module.css","webpack://@melloware/react-logviewer/./src/components/SearchBar/index.module.css"],"sourcesContent":["\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./index.module.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./index.module.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { CSSProperties, Component, ReactNode } from \"react\";\n\nimport styles from \"./index.module.css\";\n\nexport interface LinePartCss {\n    foreground?: string | number;\n    bold?: string;\n    background?: string;\n    italic?: string;\n    underline?: string;\n    text: string;\n}\n\nconst getClassName = (part: LinePartCss) => {\n    const className = [\"log-part\"];\n\n    if (part.foreground && part.bold) {\n        className.push(styles[`${part.foreground}Bold`], styles.bold);\n    } else if (part.foreground) {\n        className.push(styles[part.foreground]);\n    } else if (part.bold) {\n        className.push(styles.bold);\n    }\n\n    if (part.background) {\n        className.push(styles[`${part.background}Bg`]);\n    }\n\n    if (part.italic) {\n        className.push(styles.italic);\n    }\n\n    if (part.underline) {\n        className.push(styles.underline);\n    }\n\n    return className.join(\" \");\n};\n\nexport interface LinePartProps {\n    /**\n     * The pieces of data to render in a line. Will typically\n     * be multiple items in the array if ANSI parsed prior.\n     */\n    part: LinePartCss;\n    /**\n     * Execute a function against each line part's\n     * `text` property in `data` to process and\n     * return a new value to render for the part.\n     */\n    format?: ((text: string) => ReactNode) | undefined;\n    /**\n     * Style for the line Part\n     */\n    style?: CSSProperties | undefined;\n}\n\n/**\n * An individual segment of text within a line. When the text content\n * is ANSI-parsed, each boundary is placed within its own `LinePart`\n * and styled separately (colors, text formatting, etc.) from the\n * rest of the line's content.\n */\nexport default class LinePart extends Component<LinePartProps, any> {\n    static defaultProps = {\n        format: null,\n        style: null,\n    };\n\n    render() {\n        const { format, part, style } = this.props;\n\n        return (\n            <span className={getClassName(part)} style={style}>\n                {format ? format(part.text) : part.text}\n            </span>\n        );\n    }\n}\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./index.module.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./index.module.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { CSSProperties, Component, ReactNode } from \"react\";\n\nimport LinePart from \"../LinePart\";\nimport styles from \"./index.module.css\";\n\n/* eslint-disable react/no-array-index-key */\n\nexport interface LineContentProps {\n    /**\n     * The pieces of data to render in a line. Will typically\n     * be multiple items in the array if ANSI parsed prior.\n     */\n    data?: any[];\n    /**\n     * The line number being rendered.\n     */\n    number: string | number | undefined;\n    /**\n     * Execute a function against each line part's\n     * `text` property in `data` to process and\n     * return a new value to render for the part.\n     */\n    formatPart?: ((text: string) => ReactNode) | undefined;\n    /**\n     * CSS Style of the LineContent.\n     */\n    style?: CSSProperties | undefined;\n}\n\n/**\n * The container of all the individual pieces of content that\n * is on a single line. May contain one or more `LinePart`s\n * depending on ANSI parsing.\n */\nexport default class LineContent extends Component<LineContentProps, any> {\n    static defaultProps = {\n        formatPart: null,\n        style: null,\n    };\n\n    render() {\n        const { data, formatPart, number, style } = this.props;\n\n        if (data) {\n            const last = data[data.length - 1];\n\n            if (\n                last &&\n                typeof last.text === \"string\" &&\n                !last.text.endsWith(\"\\n\")\n            ) {\n                last.text += \"\\n\";\n            }\n        }\n\n        return (\n            <span className={`log-content ${styles.lineContent}`} style={style}>\n                {data &&\n                    data.map((part: any, n: number) => (\n                        <LinePart\n                            part={part}\n                            format={formatPart}\n                            key={`line-${number}-${n}`}\n                        />\n                    ))}\n            </span>\n        );\n    }\n}\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./index.module.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./index.module.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { object } from \"prop-types\";\n\nimport React, { Component } from \"react\";\n\nimport styles from \"./index.module.css\";\n\nexport interface LineGutterProps {\n    /**\n     * The gutter object\n     */\n    gutter: React.ReactNode;\n}\n\n/**\n * The gutter is an element between the line number and content.\n */\nexport default class LineGutter extends Component<LineGutterProps, any> {\n    static propTypes = {\n        gutter: object,\n    };\n\n    static defaultProps = {\n        gutter: null,\n    };\n\n    render() {\n        const { gutter } = this.props;\n\n        return (\n            <span className={`log-gutter ${styles.lineGutter}`}>{gutter}</span>\n        );\n    }\n}\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./index.module.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./index.module.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { CSSProperties, Component, MouseEventHandler } from \"react\";\n\nimport styles from \"./index.module.css\";\n\nexport interface LineNumberProps {\n    /**\n     * The line number to display in the anchor.\n     */\n    number: string | number | undefined;\n    /**\n     * Specify whether this line is highlighted.\n     */\n    highlight?: boolean | undefined;\n    /**\n     * Execute a function when the line number is clicked.\n     */\n    onClick?: MouseEventHandler<HTMLAnchorElement> | undefined;\n    /**\n     * CSS style for the Line Number.\n     */\n    style?: CSSProperties | undefined;\n}\n\n/**\n * The line number of a single line.\n * The anchor contained within is interactive, and will highlight the\n * entire line upon selection.\n */\nexport default class LineNumber extends Component<LineNumberProps, any> {\n    static defaultProps = {\n        style: null,\n        highlight: false,\n        onClick: null,\n    };\n\n    render() {\n        const { highlight, onClick, number, style } = this.props;\n        const className = `log-number ${\n            highlight ? styles.lineNumberHighlight : styles.lineNumber\n        }`;\n\n        return (\n            <a\n                id={\"\" + number}\n                onClick={onClick}\n                className={className}\n                style={style}\n            />\n        );\n    }\n}\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./index.module.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./index.module.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n    CSSProperties,\n    Component,\n    MouseEventHandler,\n    ReactNode,\n} from \"react\";\n\nimport LineContent from \"../LineContent\";\nimport LineGutter from \"../LineGutter\";\nimport LineNumber from \"../LineNumber\";\nimport styles from \"./index.module.css\";\n\nexport interface LineProps {\n    data?: any[];\n    number?: number | string;\n    rowHeight?: number;\n    highlight?: boolean | undefined;\n    selectable?: boolean | undefined;\n    style?: CSSProperties | undefined;\n    className?: string;\n    gutter?: React.ReactNode;\n    highlightClassName?: string;\n    /**\n     * Enable the line numbers to be displayed. Default is true.\n     */\n    enableLineNumbers?: boolean | undefined;\n    /**\n     * Enable the line gutters to be displayed. Default is false\n     */\n    enableGutters?: boolean | undefined;\n    formatPart?: ((text: string) => ReactNode) | undefined;\n    onLineNumberClick?: MouseEventHandler<HTMLAnchorElement> | undefined;\n}\n\n/**\n * A single row of content, containing both the line number\n * and any text content within the line.\n */\nexport default class Line extends Component<LineProps, any> {\n    static defaultProps = {\n        highlight: false,\n        selectable: false,\n        style: {},\n        formatPart: null,\n        onLineNumberClick: null,\n        onRowClick: null,\n        className: \"\",\n        highlightClassName: \"\",\n        enableLineNumbers: true,\n    };\n\n    render() {\n        const {\n            data,\n            formatPart,\n            highlight,\n            selectable,\n            onLineNumberClick,\n            number,\n            rowHeight,\n            style,\n            className,\n            highlightClassName,\n            gutter,\n        } = this.props;\n        const selectableClass = selectable ? ` ${styles.lineSelectable}` : \"\";\n        const highlightClass = highlight\n            ? ` ${styles.lineHighlight} ${highlightClassName}`\n            : \"\";\n        const classes = `${styles.line}${selectableClass}${highlightClass} ${className}`;\n        const lineStyle = {\n            ...style,\n            lineHeight: `${style ? style.height || rowHeight : rowHeight}px`,\n            minWidth: style ? style.width || \"100%\" : \"100%\",\n            width: undefined,\n        } as CSSProperties;\n\n        return (\n            <div className={classes} style={lineStyle}>\n                {this.props.enableLineNumbers ? (\n                    <LineNumber\n                        number={number}\n                        highlight={highlight}\n                        onClick={onLineNumberClick}\n                    />\n                ) : null}\n                {this.props.enableGutters ? (\n                    <LineGutter gutter={gutter} />\n                ) : null}\n                <LineContent\n                    number={number}\n                    formatPart={formatPart}\n                    data={data}\n                />\n            </div>\n        );\n    }\n}\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./index.module.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./index.module.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from \"react\";\n\nimport styles from \"./index.module.css\";\n\n/**\n * Just a loading spinner.\n */\nexport const Loading = React.memo((inProps) => {\n    return (\n        <svg\n            width=\"44\"\n            height=\"44\"\n            viewBox=\"0 0 44 44\"\n            stroke=\"#fff\"\n            className={styles.loading}\n            {...inProps}\n        >\n            <g fill=\"none\" fillRule=\"evenodd\" strokeWidth=\"2\">\n                <circle cx=\"22\" cy=\"22\" r=\"1\">\n                    <animate\n                        attributeName=\"r\"\n                        begin=\"0s\"\n                        dur=\"1.8s\"\n                        values=\"1; 20\"\n                        calcMode=\"spline\"\n                        keyTimes=\"0; 1\"\n                        keySplines=\"0.165, 0.84, 0.44, 1\"\n                        repeatCount=\"indefinite\"\n                    />\n                    <animate\n                        attributeName=\"stroke-opacity\"\n                        begin=\"0s\"\n                        dur=\"1.8s\"\n                        values=\"1; 0\"\n                        calcMode=\"spline\"\n                        keyTimes=\"0; 1\"\n                        keySplines=\"0.3, 0.61, 0.355, 1\"\n                        repeatCount=\"indefinite\"\n                    />\n                </circle>\n                <circle cx=\"22\" cy=\"22\" r=\"1\">\n                    <animate\n                        attributeName=\"r\"\n                        begin=\"-0.9s\"\n                        dur=\"1.8s\"\n                        values=\"1; 20\"\n                        calcMode=\"spline\"\n                        keyTimes=\"0; 1\"\n                        keySplines=\"0.165, 0.84, 0.44, 1\"\n                        repeatCount=\"indefinite\"\n                    />\n                    <animate\n                        attributeName=\"stroke-opacity\"\n                        begin=\"-0.9s\"\n                        dur=\"1.8s\"\n                        values=\"1; 0\"\n                        calcMode=\"spline\"\n                        keyTimes=\"0; 1\"\n                        keySplines=\"0.3, 0.61, 0.355, 1\"\n                        repeatCount=\"indefinite\"\n                    />\n                </circle>\n            </g>\n        </svg>\n    );\n});\n\nLoading.displayName = \"Loading\";\n","import { List, Range } from \"immutable\";\n\nimport reactStringReplace from \"react-string-replace\";\n\nexport const ENCODED_NEWLINE = 10; // \\n\nexport const ENCODED_CARRIAGE_RETURN = 13; // \\r\nexport const SEARCH_BAR_HEIGHT = 45;\nexport const SEARCH_MIN_KEYWORDS = 2;\n\nexport const isNewline = (current: number) =>\n    current === ENCODED_NEWLINE || current === ENCODED_CARRIAGE_RETURN;\n\nexport const getScrollIndex = ({\n    follow = false,\n    scrollToLine = 0,\n    previousCount = 0,\n    count = 0,\n    offset = 0,\n}) => {\n    if (follow) {\n        return count - 1 - offset;\n    } else if (scrollToLine && previousCount > scrollToLine) {\n        return -1;\n    } else if (scrollToLine) {\n        return scrollToLine - 1 - offset;\n    }\n\n    return -1;\n};\n\nexport const getHighlightRange = (highlight: any) => {\n    /**\n     * Set to Range(0, 0) if:\n     * 1) highlight doesn't evaluate to \"true\"\n     * 2) highlight is not a number\n     * 3) highlight is an array where a value isn't a number\n     */\n    if (\n        !highlight ||\n        (Array.isArray(highlight) &&\n            (isNaN(highlight[0]) || isNaN(highlight[1]))) ||\n        (!Array.isArray(highlight) && isNaN(highlight))\n    ) {\n        return Range(0, 0);\n    }\n\n    if (!Array.isArray(highlight)) {\n        return Range(highlight, highlight + 1);\n    }\n\n    if (highlight.length === 1) {\n        return Range(highlight[0], highlight[0] + 1);\n    }\n\n    return Range(highlight[0], highlight[1] + 1);\n};\n\nexport const bufferConcat = (a: Uint8Array, b: Uint8Array) => {\n    const buffer = new Uint8Array(a.length + b.length);\n\n    buffer.set(a, 0);\n    buffer.set(b, a.length);\n\n    return buffer;\n};\n\nexport const convertBufferToLines = (\n    currentArray: Uint8Array,\n    previousArray?: Uint8Array\n) => {\n    const buffer = previousArray\n        ? bufferConcat(previousArray, currentArray)\n        : currentArray;\n    const { length } = buffer;\n    let lastNewlineIndex = 0;\n    let index = 0;\n    const lines = List<Uint8Array>().withMutations((lines) => {\n        while (index < length) {\n            const current = buffer[index];\n            const next = buffer[index + 1];\n\n            if (isNewline(current)) {\n                lines.push(buffer.subarray(lastNewlineIndex, index));\n                lastNewlineIndex =\n                    current === ENCODED_CARRIAGE_RETURN &&\n                    next === ENCODED_NEWLINE\n                        ? index + 2\n                        : index + 1;\n\n                index = lastNewlineIndex;\n            } else {\n                index += 1;\n            }\n        }\n\n        if (!previousArray && index !== lastNewlineIndex) {\n            lines.push(buffer.slice(lastNewlineIndex));\n        }\n    });\n\n    return {\n        lines,\n        remaining:\n            index !== lastNewlineIndex ? buffer.slice(lastNewlineIndex) : null,\n    };\n};\n\nexport const getLinesLengthRanges = (rawLog: Uint8Array) => {\n    const { length } = rawLog;\n    const linesRanges = [];\n    let lastNewlineIndex = 0;\n    let index = 0;\n\n    while (index < length) {\n        const current = rawLog[index];\n        const next = rawLog[index + 1];\n\n        if (isNewline(current)) {\n            linesRanges.push(index);\n            lastNewlineIndex =\n                current === ENCODED_CARRIAGE_RETURN && next === ENCODED_NEWLINE\n                    ? index + 2\n                    : index + 1;\n\n            index = lastNewlineIndex;\n        } else {\n            index += 1;\n        }\n    }\n\n    return linesRanges;\n};\n\nexport const searchFormatPart =\n    ({\n        searchKeywords,\n        nextFormatPart,\n        caseInsensitive,\n        replaceJsx,\n        // True if this is the line the browser search is highlighting\n        selectedLine,\n        replaceJsxHighlight,\n        /**\n         * highlightedWordLocation is a bit weird, it deals with\n         * the special highlighting of a searched term\n         * if it is the one the browser-like search is currently\n         * highlighting. This is to deal with the case where there are\n         * multiple instances of the searched term in the same line,\n         * to make sure the correct one is highlighted.\n         */\n        highlightedWordLocation,\n    }: any) =>\n    (part: any) => {\n        let formattedPart = part;\n\n        if (nextFormatPart) {\n            formattedPart = nextFormatPart(part);\n        }\n\n        // Escape out regex characters so they're treated as normal\n        // characters when we use regex to search for them.\n        const regexKeywords = searchKeywords.replace(\n            /[-[\\]{}()*+?.,\\\\^$|#\\s]/g,\n            \"\\\\$&\"\n        );\n\n        // Split part on keywords\n        const splitExp = new RegExp(\n            `(?=${regexKeywords})`,\n            caseInsensitive ? \"i\" : undefined\n        );\n        const splitParts = part.split(splitExp);\n\n        // Expression to replace keywords\n        const replaceExp = new RegExp(\n            `(${regexKeywords})`,\n            caseInsensitive ? \"i\" : undefined\n        );\n\n        // This deals with the special highlighting that occurs when a\n        // line is selected using the browser search\n        const handleHighlighting = () => {\n            // If this line is selected so we need to deal with special highlighting\n            if (selectedLine) {\n                // This is the special case where the searched\n                // word is at the very start of the string\n                if (splitParts.length === 1) {\n                    formattedPart = reactStringReplace(\n                        formattedPart,\n                        regexKeywords,\n                        replaceJsxHighlight\n                    );\n                } else {\n                    // This highlights the special color\n                    // if the word is selected, otherwise, just\n                    // the regular matched search term color\n                    formattedPart = splitParts.map(\n                        (splitPart: string, index: number) =>\n                            reactStringReplace(\n                                splitPart,\n                                replaceExp,\n                                index === highlightedWordLocation\n                                    ? replaceJsxHighlight\n                                    : replaceJsx\n                            )\n                    );\n                }\n            }\n            // Finally, just do regular highlighting since this line isn't selected\n            else {\n                formattedPart = reactStringReplace(\n                    formattedPart,\n                    replaceExp,\n                    replaceJsx\n                );\n            }\n\n            return formattedPart;\n        };\n\n        if (caseInsensitive) {\n            if (part.toLowerCase().includes(searchKeywords.toLowerCase())) {\n                formattedPart = handleHighlighting();\n            }\n        } else if (part.includes(searchKeywords)) {\n            formattedPart = handleHighlighting();\n        }\n\n        return formattedPart;\n    };\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./index.module.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./index.module.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from \"react\";\n\nimport styles from \"./index.module.css\";\n\nexport const DownArrowIcon = React.memo(\n    (props: React.SVGProps<SVGSVGElement>) => {\n        return (\n            <svg\n                className={styles.downArrowIcon}\n                {...props}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 115.4 122.88\"\n            >\n                <path d=\"M24.94,55A14.66,14.66,0,0,0,4.38,75.91l43.45,42.76a14.66,14.66,0,0,0,20.56,0L111,76.73A14.66,14.66,0,0,0,90.46,55.82l-18,17.69-.29-59.17c-.1-19.28-29.42-19-29.33.24l.29,58.34L24.94,55Z\" />\n            </svg>\n        );\n    }\n);\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./index.module.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./index.module.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from \"react\";\n\nimport styles from \"./index.module.css\";\n\nexport const UpArrowIcon = React.memo(\n    (props: React.SVGProps<SVGSVGElement>) => {\n        return (\n            <svg\n                className={styles.upArrowIcon}\n                {...props}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 115.4 122.88\"\n            >\n                <path d=\"M24.94,67.88A14.66,14.66,0,0,1,4.38,47L47.83,4.21a14.66,14.66,0,0,1,20.56,0L111,46.15A14.66,14.66,0,0,1,90.46,67.06l-18-17.69-.29,59.17c-.1,19.28-29.42,19-29.33-.25L43.14,50,24.94,67.88Z\" />\n            </svg>\n        );\n    }\n);\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./index.module.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./index.module.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from \"react\";\n\nimport styles from \"./index.module.css\";\n\nexport const FilterLinesIcon = React.memo(\n    (props: React.SVGProps<SVGSVGElement>) => {\n        return (\n            <svg\n                className={styles.filterLinesIcon}\n                {...props}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 286.054 286.054\"\n            >\n                <path d=\"M8.939 44.696h178.784a8.931 8.931 0 0 0 8.939-8.939V8.939A8.937 8.937 0 0 0 187.723 0H8.939C4.005 0 0 4.005 0 8.939v26.818c0 4.934 4.005 8.939 8.939 8.939zm268.176 35.757H8.939C4.005 80.453 0 84.457 0 89.392v26.818a8.937 8.937 0 0 0 8.939 8.939h268.176a8.931 8.931 0 0 0 8.939-8.939V89.392a8.936 8.936 0 0 0-8.939-8.939zM8.939 205.601h178.784a8.931 8.931 0 0 0 8.939-8.939v-26.818a8.931 8.931 0 0 0-8.939-8.939H8.939A8.937 8.937 0 0 0 0 169.844v26.818a8.937 8.937 0 0 0 8.939 8.939zm268.176 35.757H8.939A8.937 8.937 0 0 0 0 250.297v26.818a8.937 8.937 0 0 0 8.939 8.939h268.176a8.931 8.931 0 0 0 8.939-8.939v-26.818a8.931 8.931 0 0 0-8.939-8.939z\" />\n            </svg>\n        );\n    }\n);\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./index.module.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./index.module.css\";\n       export default content && content.locals ? content.locals : undefined;\n","/* eslint-disable @typescript-eslint/no-empty-function */\nimport hotkeys from \"hotkeys-js\";\n\nimport React, { Component, Fragment, RefObject, createRef } from \"react\";\n\nimport { SEARCH_MIN_KEYWORDS } from \"../Utils/utils\";\nimport { DownArrowIcon } from \"./ArrowIcons/DownArrowIcon\";\nimport { UpArrowIcon } from \"./ArrowIcons/UpArrowIcon\";\nimport { FilterLinesIcon } from \"./FilterLinesIcon\";\nimport styles from \"./index.module.css\";\n\nexport interface SearchBarProps {\n    /**\n     * If true, capture system hotkeys for searching the page (Cmd-F, Ctrl-F,\n     * etc.)\n     */\n    enableHotKeys?: boolean | undefined;\n    /**\n     * The current result the browser search is highlighting.\n     * Only applicable if searchLikeBrowser is true.\n     * Defaults to 0.\n     */\n    currentResultsPosition: number;\n    /**\n     * If true, the input field and filter button will be disabled.\n     */\n    disabled?: boolean | undefined;\n    /**\n     * If true, then only lines that match the search term will be displayed.\n     */\n    filterActive: boolean;\n    /**\n     * Executes a function when the search input has been cleared.\n     */\n    onClearSearch?: (() => void) | undefined;\n    /**\n     * Executes a function when the option `Filter Lines With Matches`\n     * is enable.\n     */\n    onFilterLinesWithMatches: ((isFiltered: boolean) => void) | undefined;\n    /**\n     * Executes a function when the user starts typing.\n     */\n    onSearch?: ((keyword: string) => void) | undefined;\n    /**\n     * Exectues a function when enter is pressed.\n     */\n    onEnter?: ((e: React.UIEvent<HTMLElement>) => void) | undefined;\n    /**\n     * Exectues a function when shift + enter is pressed.\n     */\n    onShiftEnter?: ((e: React.UIEvent<HTMLElement>) => void) | undefined;\n    /**\n     * Number of search results. Should come from the component\n     * executing the search algorithm.\n     */\n    resultsCount?: number | undefined;\n    /**\n     * If true, adds up and down arrows to search bar to jump\n     * to the next and previous result. The down arrow calls\n     * \"onEnter\" and the up arrow calls \"onShiftEnter\"\n     * Defaults to false, which does not add the arrows.\n     */\n    enableSearchNavigation?: boolean | undefined;\n}\ntype SearchBarState = {\n    keywords?: string;\n};\n\nexport default class SearchBar extends Component<\n    SearchBarProps,\n    SearchBarState\n> {\n    static defaultProps = {\n        onSearch: () => {},\n        onClearSearch: () => {},\n        onFilterLinesWithMatches: () => {},\n        resultsCount: 0,\n        filterActive: false,\n        disabled: false,\n        enableHotKeys: false,\n        currentResultsPosition: 0,\n    };\n\n    state: SearchBarState = {\n        keywords: \"\",\n    };\n    inputRef: RefObject<HTMLInputElement>;\n\n    constructor(props: any) {\n        super(props);\n        this.inputRef = createRef<HTMLInputElement>();\n    }\n\n    handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const { value: keywords } = e.target;\n\n        this.setState({ keywords }, () => this.search());\n    };\n\n    handleFilterToggle = () => {\n        this.props.onFilterLinesWithMatches &&\n            this.props.onFilterLinesWithMatches(!this.props.filterActive);\n    };\n\n    handleKeyPress = (e: React.KeyboardEvent<HTMLElement>) => {\n        if (e.key === \"Enter\") {\n            if (e.shiftKey) {\n                this.props.onShiftEnter && this.props.onShiftEnter(e);\n            } else {\n                this.props.onEnter && this.props.onEnter(e);\n            }\n        }\n    };\n\n    handleSearchHotkey = (e: KeyboardEvent) => {\n        if (!this.inputRef.current) {\n            return;\n        }\n\n        e.preventDefault();\n        this.inputRef.current.focus();\n    };\n\n    search = () => {\n        const { keywords } = this.state;\n        const { onSearch, onClearSearch } = this.props;\n\n        if (keywords && keywords.length > SEARCH_MIN_KEYWORDS) {\n            onSearch && onSearch(keywords);\n        } else {\n            onClearSearch && onClearSearch();\n        }\n    };\n\n    componentDidMount() {\n        if (this.props.enableHotKeys) {\n            hotkeys(\"ctrl+f,command+f\", this.handleSearchHotkey);\n            hotkeys.filter = () => true;\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.props.enableHotKeys) {\n            hotkeys.deleteScope(\"all\");\n        }\n    }\n\n    render() {\n        const {\n            resultsCount,\n            filterActive,\n            disabled,\n            enableSearchNavigation,\n            currentResultsPosition,\n            onEnter,\n            onShiftEnter,\n        } = this.props;\n        const matchesLabel = `match${resultsCount === 1 ? \"\" : \"es\"}`;\n        const filterIcon = filterActive ? styles.active : styles.inactive;\n        const arrowIcon = resultsCount ? styles.active : styles.inactive;\n\n        return (\n            <div className={`react-lazylog-searchbar ${styles.searchBar}`}>\n                <span\n                    className={`react-lazylog-searchbar-matches ${\n                        resultsCount ? \"active\" : \"inactive\"\n                    } ${resultsCount ? styles.active : styles.inactive}`}\n                    style={{ marginRight: \"10px\" }}\n                >\n                    {enableSearchNavigation && resultsCount\n                        ? `${\n                              currentResultsPosition + 1\n                          } of ${resultsCount} ${matchesLabel}`\n                        : `${resultsCount} ${matchesLabel}`}\n                </span>\n                <input\n                    autoComplete=\"off\"\n                    type=\"text\"\n                    name=\"search\"\n                    placeholder=\"Search\"\n                    className={`react-lazylog-searchbar-input ${styles.searchInput}`}\n                    onChange={this.handleSearchChange}\n                    onKeyUp={this.handleKeyPress}\n                    value={this.state.keywords}\n                    disabled={disabled}\n                    ref={this.inputRef}\n                />\n                <button\n                    disabled={disabled}\n                    className={`react-lazylog-searchbar-filter ${\n                        filterActive ? \"active\" : \"inactive\"\n                    } ${styles.button} ${filterIcon} ${styles.clickable}`}\n                    onKeyUp={this.handleKeyPress}\n                    onMouseUp={this.handleFilterToggle}\n                >\n                    <FilterLinesIcon />\n                </button>\n                {enableSearchNavigation && (\n                    <Fragment>\n                        <button\n                            disabled={disabled}\n                            className={`react-lazylog-searchbar-up-arrow ${\n                                resultsCount\n                                    ? `active ${styles.clickable}`\n                                    : \"inactive\"\n                            } ${styles.button} ${arrowIcon}`}\n                            onClick={onShiftEnter}\n                        >\n                            <UpArrowIcon />\n                        </button>\n                        <button\n                            disabled={disabled}\n                            className={`react-lazylog-searchbar-down-arrow ${\n                                resultsCount\n                                    ? `active ${styles.clickable}`\n                                    : \"inactive\"\n                            } ${styles.button} ${arrowIcon}`}\n                            onClick={onEnter}\n                        >\n                            <DownArrowIcon />\n                        </button>\n                    </Fragment>\n                )}\n            </div>\n        );\n    }\n}\n","/* eslint-disable no-plusplus, no-continue */\ntype AnisMap = {\n    [key: string]: string;\n};\nconst foregroundColors: AnisMap = {\n    \"30\": \"black\",\n    \"31\": \"red\",\n    \"32\": \"green\",\n    \"33\": \"yellow\",\n    \"34\": \"blue\",\n    \"35\": \"magenta\",\n    \"36\": \"cyan\",\n    \"37\": \"white\",\n    \"90\": \"grey\",\n};\nconst backgroundColors: AnisMap = {\n    \"40\": \"black\",\n    \"41\": \"red\",\n    \"42\": \"green\",\n    \"43\": \"yellow\",\n    \"44\": \"blue\",\n    \"45\": \"magenta\",\n    \"46\": \"cyan\",\n    \"47\": \"white\",\n};\nconst styles: AnisMap = {\n    \"1\": \"bold\",\n    \"3\": \"italic\",\n    \"4\": \"underline\",\n};\nconst eraseChar = (matchingText: string, result: any[]): any[] => {\n    if (matchingText.length) {\n        return [matchingText.substr(0, matchingText.length - 1), result];\n    } else if (result.length) {\n        const index = result.length - 1;\n        const { text } = result[index];\n        const newResult =\n            text.length === 1\n                ? result.slice(0, result.length - 1)\n                : result.map((item, i) =>\n                      index === i\n                          ? { ...item, text: text.substr(0, text.length - 1) }\n                          : item\n                  );\n\n        return [matchingText, newResult];\n    }\n\n    return [matchingText, result];\n};\n\nconst ansiparse = (str: string): any[] => {\n    let matchingControl = null;\n    let matchingData = null;\n    let matchingText = \"\";\n    let ansiState = [];\n    let result = [];\n    let state: any = {};\n\n    for (let i = 0; i < str.length; i++) {\n        if (matchingControl !== null) {\n            if (matchingControl === \"\\x1b\" && str[i] === \"[\") {\n                if (matchingText) {\n                    state.text = matchingText;\n                    result.push(state);\n                    state = {};\n                    matchingText = \"\";\n                }\n\n                matchingControl = null;\n                matchingData = \"\";\n            } else {\n                matchingText += matchingControl + str[i];\n                matchingControl = null;\n            }\n\n            continue;\n        } else if (matchingData !== null) {\n            if (str[i] === \";\") {\n                ansiState.push(matchingData);\n                matchingData = \"\";\n            } else if (str[i] === \"m\") {\n                ansiState.push(matchingData);\n                matchingData = null;\n                matchingText = \"\";\n\n                for (let a = 0; a < ansiState.length; a++) {\n                    const ansiCode = ansiState[a];\n\n                    if (foregroundColors[ansiCode]) {\n                        state.foreground = foregroundColors[ansiCode];\n                    } else if (backgroundColors[ansiCode]) {\n                        state.background = backgroundColors[ansiCode];\n                    } else if (ansiCode === \"39\") {\n                        delete state.foreground;\n                    } else if (ansiCode === \"49\") {\n                        delete state.background;\n                    } else if (styles[ansiCode]) {\n                        state[styles[ansiCode]] = true;\n                    } else if (ansiCode === \"22\") {\n                        state.bold = false;\n                    } else if (ansiCode === \"23\") {\n                        state.italic = false;\n                    } else if (ansiCode === \"24\") {\n                        state.underline = false;\n                    }\n                }\n\n                ansiState = [];\n            } else {\n                matchingData += str[i];\n            }\n\n            continue;\n        }\n\n        if (str[i] === \"\\x1b\") {\n            matchingControl = str[i];\n        } else if (str[i] === \"\\u0008\") {\n            [matchingText, result] = eraseChar(matchingText, result);\n        } else {\n            matchingText += str[i];\n        }\n    }\n\n    if (matchingText) {\n        state.text = matchingText + (matchingControl || \"\");\n        result.push(state);\n    }\n\n    return result;\n};\n\nexport default ansiparse;\n","export const encode = (value: string | undefined) =>\n    new TextEncoder().encode(value);\nexport const decode = (value: BufferSource | any) => {\n    if (!ArrayBuffer.isView(value)) {\n        value = new Uint8Array([value]);\n    }\n    return new TextDecoder(\"utf-8\").decode(value);\n};\n","import mitt from \"mitt\";\n\nimport { convertBufferToLines } from \"./utils\";\n\nconst fetcher = Promise.resolve().then(() => self.fetch);\n\nexport default (url: RequestInfo | URL, options: RequestInit) => {\n    const emitter = mitt();\n\n    emitter.on(\"start\", async () => {\n        try {\n            const fetch = await fetcher;\n            const response = await fetch(\n                url,\n                Object.assign({ credentials: \"omit\" }, options)\n            );\n\n            if (!response.ok) {\n                const error = new Error(response.statusText);\n\n                // @ts-ignore\n                error[\"status\"] = response.status;\n                emitter.emit(\"error\", error);\n\n                return;\n            }\n\n            const arrayBuffer = await response.arrayBuffer();\n            const encodedLog = new Uint8Array(arrayBuffer);\n            const { lines } = convertBufferToLines(encodedLog);\n\n            emitter.emit(\"update\", {\n                lines: lines,\n            });\n            emitter.emit(\"end\", encodedLog);\n        } catch (err) {\n            emitter.emit(\"error\", err);\n        }\n    });\n\n    return emitter;\n};\n","import { decode, encode } from \"./encoding\";\nimport { getLinesLengthRanges } from \"./utils\";\n\nexport const searchIndexes = (\n    rawKeywords: string | undefined,\n    rawLog: Uint8Array\n) => {\n    const keywords = Array.from(encode(rawKeywords));\n    const table = [-1, 0];\n    const keywordsLength = keywords.length;\n    const fileLength = rawLog.length;\n    const maxKeywordsIndex = keywordsLength - 1;\n    let keywordsIndex = 0;\n    let fileIndex = 0;\n    let index = 0;\n    let position = 2;\n\n    // Build a table for the search algorithm.\n    // This takes O(needleLength) steps.\n    while (position < keywordsLength) {\n        if (keywords[position - 1] === keywords[keywordsIndex]) {\n            keywordsIndex += 1;\n            table[position] = keywordsIndex;\n            position += 1;\n        } else if (keywordsIndex > 0) {\n            keywordsIndex = table[keywordsIndex];\n        } else {\n            table[position] = 0;\n            position += 1;\n        }\n    }\n\n    const results = [];\n\n    // Scan the haystack.\n    // This takes O(haystackLength) steps.\n    while (fileIndex + index < fileLength) {\n        if (keywords[index] === rawLog[fileIndex + index]) {\n            if (index === maxKeywordsIndex) {\n                results.push(fileIndex);\n            }\n\n            index += 1;\n        } else if (table[index] > -1) {\n            fileIndex = fileIndex + index - table[index];\n            index = table[index];\n        } else {\n            index = 0;\n            fileIndex += 1;\n        }\n    }\n\n    return results;\n};\n\nexport const searchLines = (\n    rawKeywords: string | undefined,\n    rawLog: Uint8Array,\n    isCaseInsensitive: boolean\n) => {\n    let keywords = rawKeywords;\n    let log = rawLog;\n    let decodedLog = decode(log);\n\n    if (isCaseInsensitive) {\n        keywords = keywords?.toLowerCase();\n        decodedLog = decodedLog.toLowerCase();\n    }\n    decodedLog = decodedLog.endsWith(\"\\n\") ? decodedLog : decodedLog + \"\\n\";\n    log = encode(decodedLog);\n\n    const results = searchIndexes(keywords, log);\n    const linesRanges = getLinesLengthRanges(log);\n    const maxLineRangeIndex = linesRanges.length;\n    const maxResultIndex = results.length;\n    const resultLines = [];\n    let lineRangeIndex = 0;\n    let resultIndex = 0;\n    let lineRange;\n    let result;\n\n    while (lineRangeIndex < maxLineRangeIndex) {\n        lineRange = linesRanges[lineRangeIndex];\n\n        while (resultIndex < maxResultIndex) {\n            result = results[resultIndex];\n\n            if (result <= lineRange) {\n                resultLines.push(lineRangeIndex + 1);\n                resultIndex += 1;\n            } else {\n                break;\n            }\n        }\n\n        lineRangeIndex += 1;\n    }\n\n    return resultLines;\n};\n","import { List } from \"immutable\";\nimport mitt, { Emitter, EventType } from \"mitt\";\n\nimport { bufferConcat, convertBufferToLines } from \"./utils\";\n\nconst fetcher = Promise.resolve().then(() => self.fetch);\n\nexport const recurseReaderAsEvent: any = async (\n    reader: ReadableStreamDefaultReader<Uint8Array>,\n    emitter: Emitter<Record<EventType, unknown>>\n) => {\n    const result = await reader.read();\n\n    if (result.value) {\n        emitter.emit(\"data\", result.value);\n    }\n\n    if (!result.done) {\n        return recurseReaderAsEvent(reader, emitter);\n    }\n\n    emitter.emit(\"done\");\n};\n\nexport default (url: RequestInfo | URL, options: any) => {\n    const emitter = mitt();\n    let overage: any = null;\n    let encodedLog = new Uint8Array();\n\n    emitter.on(\"data\", (data: any) => {\n        encodedLog = bufferConcat(encodedLog, new Uint8Array(data));\n\n        const { lines, remaining } = convertBufferToLines(data, overage);\n\n        overage = remaining;\n        emitter.emit(\"update\", { lines, encodedLog });\n    });\n\n    emitter.on(\"done\", () => {\n        if (overage) {\n            emitter.emit(\"update\", { lines: List.of(overage), encodedLog });\n        }\n\n        emitter.emit(\"end\", encodedLog);\n    });\n\n    emitter.on(\"start\", async () => {\n        try {\n            const fetch = await fetcher;\n            const response = await fetch(\n                url,\n                Object.assign({ credentials: \"omit\" }, options)\n            );\n\n            if (!response.ok) {\n                const error = new Error(response.statusText);\n\n                // @ts-ignore\n                error[\"status\"] = response.status;\n                emitter.emit(\"error\", error);\n\n                return;\n            }\n\n            const reader = response.body?.getReader();\n\n            emitter.on(\"abort\", () => reader?.cancel(\"ABORTED\"));\n\n            return recurseReaderAsEvent(reader!, emitter);\n        } catch (err) {\n            emitter.emit(\"error\", err);\n        }\n    });\n\n    return emitter;\n};\n","import { List } from \"immutable\";\nimport mitt from \"mitt\";\n\nimport { WebsocketOptions } from \"../LazyLog\";\nimport { encode } from \"./encoding\";\nimport { bufferConcat, convertBufferToLines } from \"./utils\";\n\nexport default (url: string | URL, options: WebsocketOptions) => {\n    const { onOpen, onClose, onError, formatMessage } = options;\n    const emitter = mitt();\n    let encodedLog = new Uint8Array();\n    let overage: any = null;\n\n    emitter.on(\"data\", (data) => {\n        encodedLog = bufferConcat(\n            encodedLog,\n            encode(data as unknown as string)\n        );\n\n        const { lines, remaining } = convertBufferToLines(\n            encode(data as unknown as string),\n            overage\n        );\n\n        overage = remaining;\n\n        emitter.emit(\"update\", { lines, encodedLog });\n    });\n\n    emitter.on(\"done\", () => {\n        if (overage) {\n            emitter.emit(\"update\", { lines: List.of(overage), encodedLog });\n        }\n\n        emitter.emit(\"end\", encodedLog);\n    });\n\n    emitter.on(\"start\", () => {\n        try {\n            // try to connect to websocket\n            const socket = new WebSocket(url);\n\n            socket.addEventListener(\"open\", (e) => {\n                // relay on open events if a handler is registered\n                onOpen && onOpen(e, socket);\n            });\n            socket.addEventListener(\"close\", (e) => {\n                onClose && onClose(e);\n            });\n\n            socket.addEventListener(\"error\", (err) => {\n                onError && onError(err);\n            });\n\n            socket.addEventListener(\"message\", (e) => {\n                let msg = formatMessage ? formatMessage(e.data) : e.data;\n\n                if (typeof msg !== \"string\") {\n                    return;\n                }\n                // add a new line character between each message if one doesn't exist.\n                // this allows our search index to properly distinguish new lines.\n                msg = msg.endsWith(\"\\n\") ? msg : `${msg}\\n`;\n\n                emitter.emit(\"data\", msg);\n            });\n\n            emitter.on(\"abort\", () => socket.close());\n        } catch (err) {\n            emitter.emit(\"error\", err);\n        }\n    });\n\n    return emitter;\n};\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./index.module.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./index.module.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { List, Range } from \"immutable\";\r\nimport React, { CSSProperties, Component, Fragment, ReactNode } from \"react\";\r\nimport AutoSizer from \"react-virtualized-auto-sizer\";\r\nimport { ListChildComponentProps, VariableSizeList } from \"react-window\";\r\nimport Line from \"../Line\";\r\nimport { Loading } from \"../Loading\";\r\nimport SearchBar from \"../SearchBar\";\r\nimport ansiparse from \"../Utils/ansiparse\";\r\nimport { decode, encode } from \"../Utils/encoding\";\r\nimport request from \"../Utils/request\";\r\nimport { searchLines } from \"../Utils/search\";\r\nimport stream from \"../Utils/stream\";\r\nimport {\r\n    SEARCH_BAR_HEIGHT,\r\n    SEARCH_MIN_KEYWORDS,\r\n    convertBufferToLines,\r\n    getHighlightRange,\r\n    getScrollIndex,\r\n    searchFormatPart,\r\n} from \"../Utils/utils\";\r\nimport websocket from \"../Utils/websocket\";\r\nimport styles from \"./index.module.css\";\r\n\r\nexport interface WebsocketOptions {\r\n    /**\r\n     * Callback when the socket is opened\r\n     */\r\n    onOpen?: ((e: Event, socket: WebSocket) => void) | undefined;\r\n    /**\r\n     * Callback when the socket is closed\r\n     */\r\n    onClose?: ((e: CloseEvent) => void) | undefined;\r\n    /**\r\n     * Callback when the socket has an error\r\n     */\r\n    onError?: ((e: Event) => void) | undefined;\r\n    /**\r\n     * Callback allback which formats the websocket data stream.\r\n     */\r\n    formatMessage?: ((message: any) => string) | undefined;\r\n}\r\n\r\nexport interface LineNumberClickEvent {\r\n    lineNumber: number;\r\n    highlightRange?: Immutable.Seq.Indexed<number>;\r\n}\r\n\r\n/**\r\n * React component that loads and views remote text in the browser lazily and efficiently.\r\n */\r\nexport interface LazyLogProps {\r\n    /**\r\n     * Flag to enable/disable case insensitive search\r\n     */\r\n    caseInsensitive?: boolean | undefined;\r\n    /**\r\n     * If true, capture system hotkeys for searching the page (Cmd-F, Ctrl-F,\r\n     * etc.)\r\n     */\r\n    enableHotKeys?: boolean | undefined;\r\n    /**\r\n     * Optional custom inline style to attach to element which contains\r\n     * the interior scrolling container.\r\n     */\r\n    containerStyle?: CSSProperties | undefined;\r\n    /**\r\n     * Enable the line gutters to be displayed. Default is false\r\n     */\r\n    enableGutters?: boolean | undefined;\r\n    /**\r\n     * Enable the line numbers to be displayed. Default is true.\r\n     */\r\n    enableLineNumbers?: boolean | undefined;\r\n    /**\r\n     * Enable the search feature.\r\n     */\r\n    enableSearch?: boolean | undefined;\r\n    /**\r\n     * If true, search like a browser search - enter jumps to the next line\r\n     * with the searched term, shift + enter goes backwards.\r\n     * Also adds up and down arrows to search bar to jump\r\n     * to the next and previous result.\r\n     * If false, enter toggles the filter instead.\r\n     * Defaults to true.\r\n     */\r\n    enableSearchNavigation?: boolean | undefined;\r\n    /**\r\n     * Enable the ability to select multiple lines using shift + click.\r\n     * Defaults to true.\r\n     */\r\n    enableMultilineHighlight?: boolean | undefined;\r\n    /**\r\n     * Number of extra lines to show at the bottom of the log.\r\n     * Set this to 1 so that Linux users can see the last line\r\n     * of the log output.\r\n     */\r\n    extraLines?: number | undefined;\r\n    /**\r\n     * Options object which will be passed through to the `fetch` request.\r\n     * Defaults to `{ credentials: 'omit' }`.\r\n     */\r\n    fetchOptions?: RequestInit | undefined;\r\n    /**\r\n     * Scroll to the end of the component after each update to the content.\r\n     * Cannot be used in combination with `scrollToLine`.\r\n     */\r\n    follow?: boolean | undefined;\r\n    /**\r\n     * Execute a function against each string part of a line,\r\n     * returning a new line part. Is passed a single argument which is\r\n     * the string part to manipulate, should return a new string\r\n     * with the manipulation completed.\r\n     */\r\n    formatPart?: ((text: string) => ReactNode) | undefined;\r\n    /**\r\n     * The Line Gutter component\r\n     */\r\n    gutter?: React.ReactNode[];\r\n    /**\r\n     * Set the height in pixels for the component.\r\n     * Defaults to `'auto'` if unspecified. When the `height` is `'auto'`,\r\n     * the component will expand vertically to fill its container.\r\n     */\r\n    height?: string | number | undefined;\r\n    /**\r\n     * Line number (e.g. `highlight={10}`) or line number range to highlight\r\n     * inclusively (e.g. `highlight={[5, 10]}` highlights lines 5-10).\r\n     * This is 1-indexed, i.e. line numbers start at `1`.\r\n     */\r\n    highlight?: number | number[] | undefined;\r\n    /**\r\n     * Specify an additional className to append to highlighted lines.\r\n     */\r\n    highlightLineClassName?: string | undefined;\r\n    /**\r\n     * Specify an additional className to append to lines.\r\n     */\r\n    lineClassName?: string | undefined;\r\n    /**\r\n     * Specify an alternate component to use when loading.\r\n     */\r\n    loadingComponent?: React.ReactNode | ((props: any) => React.ReactNode);\r\n    /**\r\n     * Execute a function if the provided `url` has encountered an error\r\n     * during loading.\r\n     */\r\n    onError?: ((error: any) => any) | undefined;\r\n    /**\r\n     * Execute a function when the highlighted range has changed.\r\n     * Is passed a single argument which is an `Immutable.Range`\r\n     * of the highlighted line numbers.\r\n     */\r\n    onHighlight?: ((range: Immutable.Seq.Indexed<number>) => any) | undefined;\r\n    /**\r\n     * Execute a function if/when the provided `url` has completed loading.\r\n     */\r\n    onLoad?: (() => any) | undefined;\r\n    /**\r\n     * Additional function called when a line number is clicked.\r\n     * On click, the line will always be highlighted.\r\n     * This function is to provide additional actions.\r\n     * Receives an object with lineNumber and highlightRange.\r\n     * Defaults to null.\r\n     */\r\n    onLineNumberClick?: ((event: LineNumberClickEvent) => any) | undefined;\r\n    /**\r\n     * Number of rows to render above/below the visible bounds of the list.\r\n     * This can help reduce flickering during scrolling on\r\n     * certain browsers/devices. Defaults to `100`.\r\n     */\r\n    overscanRowCount?: number | undefined;\r\n    /**\r\n     * A fixed row height in pixels. Controls how tall a line is,\r\n     * as well as the `lineHeight` style of the line's text.\r\n     * Defaults to `19`.\r\n     */\r\n    rowHeight?: number | undefined;\r\n    /**\r\n     * Scroll to a particular line number once it has loaded.\r\n     * This is 1-indexed, i.e. line numbers start at `1`.\r\n     * Cannot be used in combination with `follow`.\r\n     */\r\n    scrollToLine?: number | undefined;\r\n    /**\r\n     * Make the text selectable, allowing to copy & paste. Defaults to `false`.\r\n     */\r\n    selectableLines?: boolean | undefined;\r\n    /**\r\n     * Set to `true` to specify remote URL will be streaming chunked data.\r\n     * Defaults to `false` to download data until completion.\r\n     */\r\n    stream?: boolean | undefined;\r\n    /**\r\n     * Optional custom inline style to attach to root\r\n     * virtual `LazyList` element.\r\n     */\r\n    style?: CSSProperties | undefined;\r\n    /**\r\n     * String containing text to display.\r\n     */\r\n    text?: string | undefined;\r\n    /**\r\n     * The URL from which to fetch content. Subject to same-origin policy,\r\n     * so must be accessible via fetch on same domain or via CORS.\r\n     */\r\n    url?: string;\r\n    /**\r\n     * Set to `true` to specify that url is a websocket URL.\r\n     * Defaults to `false` to download data until completion.\r\n     */\r\n    websocket?: boolean | undefined;\r\n    /**\r\n     * Options object which will be passed through to websocket.\r\n     */\r\n    websocketOptions?: WebsocketOptions | undefined;\r\n    /**\r\n     * Set the width in pixels for the component.\r\n     * Defaults to `'auto'` if unspecified.\r\n     * When the `width` is `'auto'`, the component will expand\r\n     * horizontally to fill its container.\r\n     */\r\n    width?: string | number | undefined;\r\n}\r\ntype LazyLogState = {\r\n    count: number;\r\n    currentResultsPosition: number;\r\n    error?: Error;\r\n    filteredLines?: List<Uint8Array>;\r\n    highlight?: Immutable.Seq.Indexed<number>;\r\n    isFilteringLinesWithMatches: boolean;\r\n    isSearching: boolean;\r\n    lines: List<Uint8Array>;\r\n    listRef?: React.RefObject<VariableSizeList>;\r\n    loaded?: boolean;\r\n    offset: number;\r\n    resultLineUniqueIndexes: number[];\r\n    resultLines: number[];\r\n    scrollOffset: number;\r\n    scrollToIndex: number;\r\n    scrollToLine: number;\r\n    searchKeywords?: string;\r\n    text?: string;\r\n    url?: string;\r\n};\r\n\r\n/**\r\n * React component that loads and views remote text in the browser lazily and efficiently.\r\n * Logs can be loaded from static text, a URL, or a WebSocket and including ANSI highlighting.\r\n */\r\nexport default class LazyLog extends Component<LazyLogProps, LazyLogState> {\r\n    static defaultProps = {\r\n        containerStyle: {\r\n            width: \"auto\",\r\n            maxWidth: \"initial\",\r\n            overflow: \"initial\",\r\n        },\r\n        enableHotKeys: false,\r\n        caseInsensitive: false,\r\n        enableMultilineHighlight: true,\r\n        enableSearch: false,\r\n        enableGutters: false,\r\n        enableLineNumbers: true,\r\n        extraLines: 0,\r\n        fetchOptions: { credentials: \"omit\" as RequestCredentials },\r\n        follow: false,\r\n        formatPart: undefined,\r\n        height: \"auto\",\r\n        highlight: undefined,\r\n        highlightLineClassName: \"\",\r\n        lineClassName: \"\",\r\n        onError: undefined,\r\n        onHighlight: undefined,\r\n        onLineNumberClick: undefined,\r\n        onLoad: undefined,\r\n        overscanRowCount: 100,\r\n        rowHeight: 19,\r\n        scrollToLine: 0,\r\n        searchLikeBrowser: true,\r\n        selectableLines: false,\r\n        stream: false,\r\n        style: {},\r\n        websocket: false,\r\n        websocketOptions: {},\r\n        width: \"auto\",\r\n    };\r\n\r\n    static getDerivedStateFromProps(\r\n        {\r\n            highlight,\r\n            follow,\r\n            scrollToLine,\r\n            url: nextUrl,\r\n            text: nextText,\r\n        }: LazyLogProps,\r\n        {\r\n            count,\r\n            offset,\r\n            url: previousUrl,\r\n            text: previousText,\r\n            highlight: previousHighlight,\r\n            isSearching,\r\n            scrollToIndex,\r\n        }: LazyLogState\r\n    ) {\r\n        const newScrollToIndex = isSearching\r\n            ? scrollToIndex\r\n            : getScrollIndex({ follow, scrollToLine, count, offset });\r\n        const shouldUpdate =\r\n            (nextUrl && nextUrl !== previousUrl) ||\r\n            (nextText && nextText !== previousText);\r\n\r\n        return {\r\n            scrollToIndex: newScrollToIndex,\r\n            highlight:\r\n                previousHighlight === Range(0, 0)\r\n                    ? getHighlightRange(highlight)\r\n                    : previousHighlight || getHighlightRange(previousHighlight),\r\n            ...(shouldUpdate\r\n                ? {\r\n                      url: nextUrl,\r\n                      text: nextText,\r\n                      lines: List(),\r\n                      count: 0,\r\n                      offset: 0,\r\n                      loaded: false,\r\n                      error: null,\r\n                  }\r\n                : null),\r\n        };\r\n    }\r\n\r\n    state: any = {\r\n        resultLines: [],\r\n        count: 0,\r\n        currentResultsPosition: 0,\r\n        isFilteringLinesWithMatches: false,\r\n        isSearching: false,\r\n        offset: 0,\r\n        resultLineUniqueIndexes: [],\r\n        scrollOffset: 0,\r\n        scrollToIndex: 0,\r\n        scrollToLine: 0,\r\n    };\r\n\r\n    emitter: any = undefined;\r\n    encodedLog: any = undefined;\r\n\r\n    componentDidMount() {\r\n        this.setState({ listRef: React.createRef() });\r\n        this.request();\r\n    }\r\n\r\n    componentDidUpdate(prevProps: LazyLogProps, prevState: LazyLogState) {\r\n        if (\r\n            prevProps.url !== this.props.url ||\r\n            prevState.url !== this.state.url ||\r\n            prevProps.text !== this.props.text\r\n        ) {\r\n            this.request();\r\n        }\r\n\r\n        // Reset scroll position when there's new data, otherwise the screen goes blank for some reason\r\n        if (\r\n            prevProps.text !== this.props.text &&\r\n            !this.props.follow &&\r\n            this.state.scrollOffset > 0\r\n        ) {\r\n            const update = () => {\r\n                const newPosition = this.state.scrollOffset;\r\n                this.state.listRef?.current?.scrollToItem(newPosition, \"auto\");\r\n                this.state.listRef?.current?.forceUpdate();\r\n            };\r\n            update();\r\n        }\r\n\r\n        if (\r\n            !this.state.loaded &&\r\n            prevState.loaded !== this.state.loaded &&\r\n            this.props.onLoad\r\n        ) {\r\n            this.props.onLoad();\r\n        } else if (\r\n            this.state.error &&\r\n            prevState.error !== this.state.error &&\r\n            this.props.onError\r\n        ) {\r\n            this.props.onError(this.state.error);\r\n        }\r\n\r\n        if (\r\n            this.props.highlight &&\r\n            prevProps.highlight !== this.props.highlight &&\r\n            this.props.onHighlight\r\n        ) {\r\n            this.props.onHighlight(this.state.highlight!);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.endRequest();\r\n    }\r\n\r\n    initEmitter() {\r\n        const {\r\n            stream: isStream,\r\n            websocket: isWebsocket,\r\n            url,\r\n            fetchOptions,\r\n            websocketOptions,\r\n        } = this.props;\r\n\r\n        if (isWebsocket) {\r\n            return websocket(url!, websocketOptions!);\r\n        }\r\n\r\n        if (isStream) {\r\n            return stream(url!, fetchOptions);\r\n        }\r\n\r\n        return request(url!, fetchOptions!);\r\n    }\r\n\r\n    request() {\r\n        const { text, url } = this.props;\r\n\r\n        this.endRequest();\r\n\r\n        if (text) {\r\n            const encodedLog = encode(text);\r\n            const { lines } = convertBufferToLines(encodedLog);\r\n            this.handleUpdate({\r\n                lines: lines,\r\n                encodedLog,\r\n            });\r\n            this.handleEnd(encodedLog);\r\n        }\r\n\r\n        if (url) {\r\n            this.emitter = this.initEmitter();\r\n            this.emitter.on(\"update\", this.handleUpdate);\r\n            this.emitter.on(\"end\", this.handleEnd);\r\n            this.emitter.on(\"error\", this.handleError);\r\n            this.emitter.emit(\"start\");\r\n        }\r\n    }\r\n\r\n    endRequest() {\r\n        if (this.emitter) {\r\n            this.emitter.emit(\"abort\");\r\n            this.emitter.off(\"update\", this.handleUpdate);\r\n            this.emitter.off(\"end\", this.handleEnd);\r\n            this.emitter.off(\"error\", this.handleError);\r\n            this.emitter = null;\r\n        }\r\n    }\r\n\r\n    handleUpdate = ({ lines: moreLines, encodedLog }: any) => {\r\n        this.encodedLog = encodedLog;\r\n        const { scrollToLine, follow, stream, websocket } = this.props;\r\n        const { count: previousCount } = this.state;\r\n\r\n        const offset = 0;\r\n        const lines = (this.state.lines || List()).concat(moreLines);\r\n        const count = lines.count();\r\n\r\n        const scrollToIndex = getScrollIndex({\r\n            follow,\r\n            scrollToLine,\r\n            previousCount,\r\n            count,\r\n            offset,\r\n        });\r\n\r\n        this.setState({\r\n            lines,\r\n            offset,\r\n            count,\r\n            scrollToIndex,\r\n        });\r\n\r\n        if (stream || websocket) {\r\n            this.forceSearch();\r\n        }\r\n    };\r\n\r\n    handleEnd = (encodedLog: Uint8Array) => {\r\n        this.encodedLog = encodedLog;\r\n        this.setState({ loaded: true });\r\n\r\n        if (this.props.onLoad) {\r\n            this.props.onLoad();\r\n        }\r\n    };\r\n\r\n    handleError = (err: Error) => {\r\n        this.setState({ error: err });\r\n\r\n        if (this.props.onError) {\r\n            this.props.onError(err);\r\n        }\r\n    };\r\n\r\n    handleHighlight = (e: any) => {\r\n        const { onHighlight, enableMultilineHighlight } = this.props;\r\n        const { isFilteringLinesWithMatches } = this.state;\r\n\r\n        if (!e.target.id) {\r\n            return;\r\n        }\r\n\r\n        const lineNumber = +e.target.id;\r\n\r\n        if (!lineNumber) {\r\n            return;\r\n        }\r\n\r\n        const first = this.state.highlight?.first();\r\n        const last = this.state.highlight?.last();\r\n        let range;\r\n\r\n        if (first === lineNumber) {\r\n            range = null;\r\n        } else if (!e.shiftKey || !first) {\r\n            range = lineNumber;\r\n        } else if (enableMultilineHighlight && lineNumber > first) {\r\n            range = [first, lineNumber];\r\n        } else if (!enableMultilineHighlight && lineNumber > first) {\r\n            range = lineNumber;\r\n        } else {\r\n            range = [lineNumber, last];\r\n        }\r\n\r\n        const highlight = getHighlightRange(range);\r\n        const state = { highlight };\r\n\r\n        if (isFilteringLinesWithMatches) {\r\n            Object.assign(state, {\r\n                scrollToIndex: getScrollIndex({ scrollToLine: lineNumber }),\r\n            });\r\n        }\r\n\r\n        this.setState(state, () => {\r\n            if (onHighlight) {\r\n                onHighlight(highlight);\r\n            }\r\n\r\n            if (isFilteringLinesWithMatches) {\r\n                this.handleFilterLinesWithMatches(false);\r\n            }\r\n        });\r\n\r\n        return highlight;\r\n    };\r\n\r\n    handleScrollToLine(scrollToLine = 0) {\r\n        const scrollToIndex = getScrollIndex({\r\n            scrollToLine,\r\n        });\r\n\r\n        this.setState({\r\n            scrollToIndex,\r\n            scrollToLine,\r\n        });\r\n        this.state.listRef?.current?.scrollToItem(scrollToLine, \"auto\");\r\n        this.state.listRef?.current?.forceUpdate();\r\n    }\r\n\r\n    handleEnterPressed = () => {\r\n        const {\r\n            resultLines,\r\n            scrollToLine,\r\n            currentResultsPosition,\r\n            isFilteringLinesWithMatches,\r\n        } = this.state;\r\n\r\n        if (!this.props.enableSearchNavigation) {\r\n            this.handleFilterLinesWithMatches(!isFilteringLinesWithMatches);\r\n\r\n            return;\r\n        }\r\n\r\n        // If we have search results\r\n        if (resultLines) {\r\n            // If we already scrolled to a line\r\n            if (scrollToLine) {\r\n                // Scroll to the next line if possible,\r\n                // wrap to the top if we're at the end.\r\n\r\n                if (currentResultsPosition + 1 < resultLines.length) {\r\n                    this.handleScrollToLine(\r\n                        resultLines[currentResultsPosition + 1]\r\n                    );\r\n                    this.setState({\r\n                        currentResultsPosition: currentResultsPosition + 1,\r\n                    });\r\n\r\n                    return;\r\n                }\r\n            }\r\n\r\n            this.handleScrollToLine(resultLines[0]);\r\n            this.setState({ currentResultsPosition: 0 });\r\n        }\r\n    };\r\n\r\n    handleShiftEnterPressed = () => {\r\n        const { resultLines, scrollToLine, currentResultsPosition } =\r\n            this.state;\r\n\r\n        if (!this.props.enableSearchNavigation) {\r\n            return;\r\n        }\r\n\r\n        // If we have search results\r\n        if (resultLines) {\r\n            // If we already scrolled to a line\r\n            if (scrollToLine) {\r\n                // Scroll to the previous line if possible,\r\n                // wrap to the bottom if we're at the top.\r\n\r\n                if (currentResultsPosition - 1 >= 0) {\r\n                    this.handleScrollToLine(\r\n                        resultLines[currentResultsPosition - 1]\r\n                    );\r\n                    this.setState({\r\n                        currentResultsPosition: currentResultsPosition - 1,\r\n                    });\r\n\r\n                    return;\r\n                }\r\n            }\r\n\r\n            this.handleScrollToLine(resultLines[resultLines.length - 1]);\r\n            this.setState({ currentResultsPosition: resultLines.length - 1 });\r\n        }\r\n    };\r\n\r\n    handleSearch = (keywords: string | undefined) => {\r\n        const { resultLines, searchKeywords } = this.state;\r\n        const { caseInsensitive, stream, websocket } = this.props;\r\n        const currentResultLines =\r\n            !stream && !websocket && keywords === searchKeywords\r\n                ? resultLines\r\n                : searchLines(keywords, this.encodedLog, caseInsensitive!);\r\n\r\n        this.setState(\r\n            {\r\n                resultLines: currentResultLines,\r\n                isSearching: true,\r\n                searchKeywords: keywords,\r\n                currentResultsPosition: 0,\r\n            },\r\n            this.filterLinesWithMatches\r\n        );\r\n    };\r\n\r\n    forceSearch = () => {\r\n        const { searchKeywords } = this.state;\r\n\r\n        if (searchKeywords && searchKeywords.length > SEARCH_MIN_KEYWORDS) {\r\n            this.handleSearch(this.state.searchKeywords);\r\n        }\r\n    };\r\n\r\n    handleClearSearch = () => {\r\n        this.setState({\r\n            isSearching: false,\r\n            searchKeywords: \"\",\r\n            resultLines: [],\r\n            filteredLines: List(),\r\n            resultLineUniqueIndexes: [],\r\n            isFilteringLinesWithMatches: this.state.isFilteringLinesWithMatches,\r\n            scrollToIndex: 0,\r\n            currentResultsPosition: 0,\r\n        });\r\n    };\r\n\r\n    handleFilterLinesWithMatches = (isFilterEnabled: boolean) => {\r\n        this.setState(\r\n            {\r\n                isFilteringLinesWithMatches: isFilterEnabled,\r\n                filteredLines: List(),\r\n                resultLineUniqueIndexes: [],\r\n            },\r\n            this.filterLinesWithMatches\r\n        );\r\n    };\r\n\r\n    filterLinesWithMatches = () => {\r\n        const { resultLines, lines, isFilteringLinesWithMatches } = this.state;\r\n\r\n        if (resultLines.length > 0 && isFilteringLinesWithMatches) {\r\n            const resultLineUniqueIndexes = [...new Set<number>(resultLines)];\r\n\r\n            this.setState({\r\n                resultLineUniqueIndexes,\r\n                filteredLines: lines?.filter((_line: string, index: number) =>\r\n                    resultLineUniqueIndexes.some(\r\n                        (resultLineIndex) => index + 1 === resultLineIndex\r\n                    )\r\n                ),\r\n            });\r\n        }\r\n    };\r\n\r\n    handleFormatPart = (lineNumber: number) => {\r\n        const {\r\n            isSearching,\r\n            searchKeywords,\r\n            resultLines,\r\n            currentResultsPosition,\r\n        } = this.state;\r\n        const { enableSearchNavigation } = this.props;\r\n\r\n        if (isSearching) {\r\n            // If browser-search has started and we're on the line\r\n            // that has the search term that is selected\r\n            if (\r\n                enableSearchNavigation &&\r\n                resultLines &&\r\n                currentResultsPosition !== undefined &&\r\n                resultLines[currentResultsPosition] === lineNumber\r\n            ) {\r\n                let locationInLine = 0;\r\n                // Find the first occurrence of the line number\r\n                // We use this to make sure we're only searching from where\r\n                // the line number first occurs to the currentResultsPosition below\r\n                const initialOccurrence = resultLines.findIndex(\r\n                    (element: any) =>\r\n                        element === resultLines[currentResultsPosition]\r\n                );\r\n\r\n                // This finds which word in the line should be the highlighted one.\r\n                // For example, if we should be highlighting the 2nd match on line 18,\r\n                // this would set locationInLine to 2.\r\n                for (\r\n                    let i = initialOccurrence;\r\n                    i <= currentResultsPosition;\r\n                    i += 1\r\n                ) {\r\n                    if (resultLines[i] === lineNumber) {\r\n                        locationInLine += 1;\r\n                    }\r\n                }\r\n\r\n                return searchFormatPart({\r\n                    searchKeywords,\r\n                    nextFormatPart: undefined,\r\n                    caseInsensitive: this.props.caseInsensitive,\r\n                    replaceJsx: (text: React.ReactNode, key: string) => (\r\n                        <span key={key} className={styles.searchMatch}>\r\n                            {text}\r\n                        </span>\r\n                    ),\r\n                    selectedLine: true,\r\n                    replaceJsxHighlight: (\r\n                        text: React.ReactNode,\r\n                        key: string\r\n                    ) => (\r\n                        <span\r\n                            key={key}\r\n                            className={styles.searchMatchHighlighted}\r\n                        >\r\n                            {text}\r\n                        </span>\r\n                    ),\r\n                    highlightedWordLocation: locationInLine,\r\n                });\r\n            }\r\n\r\n            return searchFormatPart({\r\n                searchKeywords,\r\n                nextFormatPart: undefined,\r\n                caseInsensitive: this.props.caseInsensitive,\r\n                replaceJsx: (text: React.ReactNode, key: string) => (\r\n                    <span key={key} className={styles.searchMatch}>\r\n                        {text}\r\n                    </span>\r\n                ),\r\n                selectedLine: undefined,\r\n                replaceJsxHighlight: undefined,\r\n                highlightedWordLocation: undefined,\r\n            });\r\n        }\r\n\r\n        return this.props.formatPart;\r\n    };\r\n\r\n    renderError() {\r\n        const { url, lineClassName, selectableLines, highlightLineClassName } =\r\n            this.props;\r\n        const { error } = this.state;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Line\r\n                    selectable={selectableLines}\r\n                    className={lineClassName}\r\n                    highlightClassName={highlightLineClassName}\r\n                    number=\"Error\"\r\n                    key=\"error-line-0\"\r\n                    data={[\r\n                        {\r\n                            bold: true,\r\n                            foreground: \"red\",\r\n                            text: error.status\r\n                                ? `${error.message} (HTTP ${error.status})`\r\n                                : error.message || \"Network Error\",\r\n                        },\r\n                    ]}\r\n                />\r\n                <Line\r\n                    selectable={selectableLines}\r\n                    key=\"error-line-1\"\r\n                    className={lineClassName}\r\n                    highlightClassName={highlightLineClassName}\r\n                    data={[\r\n                        {\r\n                            bold: true,\r\n                            text: \"An error occurred attempting to load the provided log.\",\r\n                        },\r\n                    ]}\r\n                />\r\n                <Line\r\n                    selectable={selectableLines}\r\n                    key=\"error-line-2\"\r\n                    className={lineClassName}\r\n                    highlightClassName={highlightLineClassName}\r\n                    data={[\r\n                        {\r\n                            bold: true,\r\n                            text: \"Please check the URL and ensure it is reachable.\",\r\n                        },\r\n                    ]}\r\n                />\r\n                <Line\r\n                    selectable={selectableLines}\r\n                    key=\"error-line-3\"\r\n                    className={lineClassName}\r\n                    highlightClassName={highlightLineClassName}\r\n                    data={[]}\r\n                />\r\n                <Line\r\n                    selectable={selectableLines}\r\n                    key=\"error-line-4\"\r\n                    className={lineClassName}\r\n                    highlightClassName={highlightLineClassName}\r\n                    data={[\r\n                        {\r\n                            foreground: \"blue\",\r\n                            text: url,\r\n                        },\r\n                    ]}\r\n                />\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n    renderRow = (options: ListChildComponentProps) => {\r\n        const {\r\n            rowHeight,\r\n            selectableLines,\r\n            lineClassName,\r\n            highlightLineClassName,\r\n            onLineNumberClick,\r\n            gutter,\r\n            enableGutters,\r\n            enableLineNumbers,\r\n        } = this.props;\r\n        const {\r\n            highlight,\r\n            lines,\r\n            offset,\r\n            isFilteringLinesWithMatches,\r\n            filteredLines,\r\n            resultLineUniqueIndexes,\r\n        } = this.state as LazyLogState;\r\n        const linesToRender = isFilteringLinesWithMatches\r\n            ? filteredLines\r\n            : lines;\r\n        const number = isFilteringLinesWithMatches\r\n            ? resultLineUniqueIndexes[options.index]\r\n            : options.index + 1 + offset;\r\n\r\n        if (linesToRender?.size! <= 0) {\r\n            return this.renderNoRows();\r\n        }\r\n\r\n        return (\r\n            <Line\r\n                className={`log-line ${lineClassName}`}\r\n                highlightClassName={`log-highlight ${highlightLineClassName}`}\r\n                rowHeight={rowHeight}\r\n                style={options.style}\r\n                key={options.index}\r\n                number={number}\r\n                enableLineNumbers={enableLineNumbers}\r\n                enableGutters={enableGutters}\r\n                formatPart={this.handleFormatPart(number)}\r\n                selectable={selectableLines}\r\n                highlight={highlight?.includes(number)}\r\n                onLineNumberClick={(e: any) => {\r\n                    const highlighted = this.handleHighlight(e);\r\n                    onLineNumberClick?.({\r\n                        lineNumber: number,\r\n                        highlightRange: highlighted,\r\n                    });\r\n                }}\r\n                gutter={gutter ? gutter[number] : undefined}\r\n                data={ansiparse(decode(linesToRender?.get(options.index)))}\r\n            />\r\n        );\r\n    };\r\n\r\n    renderNoRows = () => {\r\n        const { lineClassName, highlightLineClassName } = this.props;\r\n        const { error, count, loaded } = this.state;\r\n\r\n        if (error) {\r\n            return this.renderError();\r\n        }\r\n\r\n        // Handle case where log is empty\r\n        if (!count && loaded) {\r\n            return <></>;\r\n        }\r\n\r\n        // We don't do `if (loaded) {}` in order to handle\r\n        // the edge case where the log is streaming\r\n        if (count) {\r\n            return (\r\n                <Line\r\n                    className={lineClassName}\r\n                    highlightClassName={highlightLineClassName}\r\n                    data={[{ bold: true, text: \"No filter matches\" }]}\r\n                />\r\n            );\r\n        }\r\n\r\n        return this.props.loadingComponent || <Loading />;\r\n    };\r\n\r\n    calculateListHeight = (autoSizerHeight: number) => {\r\n        const { height, enableSearch } = this.props;\r\n\r\n        if (enableSearch) {\r\n            return height === \"auto\"\r\n                ? autoSizerHeight - SEARCH_BAR_HEIGHT\r\n                : Number(height) - SEARCH_BAR_HEIGHT;\r\n        }\r\n\r\n        return height === \"auto\" ? autoSizerHeight : height;\r\n    };\r\n\r\n    getItemSize = (index: number) => this.props.rowHeight || 19;\r\n\r\n    render() {\r\n        const { enableSearch } = this.props;\r\n        const {\r\n            resultLines,\r\n            isFilteringLinesWithMatches,\r\n            filteredLines = List(),\r\n            count,\r\n            currentResultsPosition,\r\n        } = this.state;\r\n        const rowCount = isFilteringLinesWithMatches\r\n            ? filteredLines.size\r\n            : count;\r\n\r\n        return (\r\n            <Fragment>\r\n                {enableSearch && (\r\n                    <SearchBar\r\n                        filterActive={isFilteringLinesWithMatches}\r\n                        onSearch={this.handleSearch}\r\n                        onClearSearch={this.handleClearSearch}\r\n                        onFilterLinesWithMatches={\r\n                            this.handleFilterLinesWithMatches\r\n                        }\r\n                        resultsCount={resultLines.length}\r\n                        disabled={count === 0}\r\n                        enableHotKeys={this.props.enableHotKeys}\r\n                        onEnter={this.handleEnterPressed}\r\n                        onShiftEnter={this.handleShiftEnterPressed}\r\n                        enableSearchNavigation={\r\n                            this.props.enableSearchNavigation\r\n                        }\r\n                        currentResultsPosition={currentResultsPosition}\r\n                    />\r\n                )}\r\n\r\n                {/* \r\n                 // @ts-ignore */}\r\n                <AutoSizer\r\n                    disableHeight={this.props.height !== \"auto\"}\r\n                    disableWidth={this.props.width !== \"auto\"}\r\n                >\r\n                    {\r\n                        // @ts-ignore\r\n                        ({ height, width }) => (\r\n                            <VariableSizeList\r\n                                ref={this.state.listRef}\r\n                                className={`react-lazylog ${styles.lazyLog}`}\r\n                                {...this.props}\r\n                                height={this.calculateListHeight(height)!}\r\n                                width={\r\n                                    this.props.width === \"auto\"\r\n                                        ? width\r\n                                        : this.props.width\r\n                                }\r\n                                itemSize={this.getItemSize}\r\n                                initialScrollOffset={this.state.scrollToIndex}\r\n                                itemCount={\r\n                                    rowCount === 0\r\n                                        ? rowCount\r\n                                        : rowCount + this.props.extraLines\r\n                                }\r\n                                onScroll={(options) => {\r\n                                    this.setState({\r\n                                        scrollOffset: options.scrollOffset,\r\n                                    });\r\n                                }}\r\n                            >\r\n                                {/* \r\n                                 // @ts-ignore */}\r\n                                {this.renderRow}\r\n                            </VariableSizeList>\r\n                        )\r\n                    }\r\n                </AutoSizer>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n","import React, { Component, Fragment, ReactNode } from \"react\";\n\nexport interface ScrollFollowRenderProps {\n    onScroll: (args: {\n        scrollTop: number;\n        scrollHeight: number;\n        clientHeight: number;\n    }) => void;\n    follow: boolean;\n    startFollowing: () => void;\n    stopFollowing: () => void;\n}\n\nexport interface ScrollFollowProps {\n    /**\n     * Render a component based on the function's arguments\n     *\n     *   - `follow: bool` This value is `true` or `false`\n     *   based on whether the component should be auto-following.\n     *   This value can be passed directly to the Lazy component's\n     *   `follow` prop.\n     *\n     *   - `onScroll: func`: This function is used to listen for scrolling\n     *   events and turn off auto-following (`follow`).\n     *   This value can be passed directly to the Lazy component's\n     *   `onScroll` prop.\n     *\n     *   - `startFollowing: func`: A helper function for manually re-starting\n     *   `follow`ing. Is not used by a Lazy component;\n     *   rather this can be invoked whenever you need to turn back on\n     *   auto-following, but cannot reliably do this from the `startFollowing`\n     *   prop. e.g `startFollowing();`\n     *\n     *   - `stopFollowing: func`: A helper function for manually stopping\n     *   `follow`ing. Is not used by a Lazy component;\n     *   rather this can be invoked whenever you need to turn off\n     *   auto-following, but cannot reliably do this from the `startFollowing`\n     *   prop. e.g `stopFollowing();`\n     */\n    render: (props: ScrollFollowRenderProps) => ReactNode;\n    /**\n     * The initial follow action; defaults to `false`.\n     * The value provided here will inform the initial `follow`\n     * property passed to the child function.\n     */\n    startFollowing?: boolean | undefined;\n}\ntype ScrollFollowState = {\n    follow: boolean;\n};\n\nexport default class ScrollFollow extends Component<\n    ScrollFollowProps,\n    ScrollFollowState\n> {\n    static defaultProps = {\n        startFollowing: false,\n    };\n\n    static getDerivedStateFromProps(nextProps: { startFollowing: boolean }) {\n        return {\n            follow: nextProps.startFollowing,\n        };\n    }\n\n    state: ScrollFollowState = {\n        follow: false,\n    };\n\n    handleScroll = ({ scrollTop, scrollHeight, clientHeight }: any) => {\n        if (this.state.follow && scrollHeight - scrollTop !== clientHeight) {\n            this.setState({ follow: false });\n        }\n    };\n\n    startFollowing = () => {\n        this.setState({ follow: true });\n    };\n\n    stopFollowing = () => {\n        this.setState({ follow: false });\n    };\n\n    render() {\n        const { render } = this.props;\n        const { follow } = this.state;\n\n        return (\n            <Fragment>\n                {render({\n                    follow,\n                    onScroll: this.handleScroll,\n                    startFollowing: this.startFollowing,\n                    stopFollowing: this.stopFollowing,\n                })}\n            </Fragment>\n        );\n    }\n}\n","export { default as LazyLog } from \"./LazyLog\";\nexport { default as Line } from \"./Line\";\nexport { default as LineContent } from \"./LineContent\";\nexport { default as LineGutter } from \"./LineGutter\";\nexport { default as LineNumber } from \"./LineNumber\";\nexport { default as LinePart } from \"./LinePart\";\nexport { Loading } from \"./Loading\";\nexport { default as ScrollFollow } from \"./ScrollFollow\";\nexport { default as SearchBar } from \"./SearchBar\";\nexport { DownArrowIcon } from \"./SearchBar/ArrowIcons/DownArrowIcon\";\nexport { UpArrowIcon } from \"./SearchBar/ArrowIcons/UpArrowIcon\";\nexport { FilterLinesIcon } from \"./SearchBar/FilterLinesIcon\";\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".mwcQB6MiHERlY01Dguac {\\n    overflow: auto !important;\\n    font-family: \\\"Monaco\\\", monospace;\\n    font-size: 12px;\\n    margin: 0;\\n    white-space: pre;\\n    background-color: #222222;\\n    color: #ffffff;\\n    font-weight: 400;\\n    will-change: initial;\\n    outline: none;\\n}\\n\\n.Y6CaaC0yKve7KWp0kBVu {\\n    background-color: #ffff00;\\n    color: #222222;\\n}\\n\\n.n7ZbVUs0ZqCsjPWJxQz1 {\\n    background-color: #ff10f0;\\n    color: #222222;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/LazyLog/index.module.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,yBAAyB;IACzB,gCAAgC;IAChC,eAAe;IACf,SAAS;IACT,gBAAgB;IAChB,yBAAyB;IACzB,cAAc;IACd,gBAAgB;IAChB,oBAAoB;IACpB,aAAa;AACjB;;AAEA;IACI,yBAAyB;IACzB,cAAc;AAClB;;AAEA;IACI,yBAAyB;IACzB,cAAc;AAClB\",\"sourcesContent\":[\".lazyLog {\\n    overflow: auto !important;\\n    font-family: \\\"Monaco\\\", monospace;\\n    font-size: 12px;\\n    margin: 0;\\n    white-space: pre;\\n    background-color: #222222;\\n    color: #ffffff;\\n    font-weight: 400;\\n    will-change: initial;\\n    outline: none;\\n}\\n\\n.searchMatch {\\n    background-color: #ffff00;\\n    color: #222222;\\n}\\n\\n.searchMatchHighlighted {\\n    background-color: #ff10f0;\\n    color: #222222;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"lazyLog\": \"mwcQB6MiHERlY01Dguac\",\n\t\"searchMatch\": \"Y6CaaC0yKve7KWp0kBVu\",\n\t\"searchMatchHighlighted\": \"n7ZbVUs0ZqCsjPWJxQz1\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".d3v5nUP2ymrR7xpAsXiO {\\n  user-select: initial;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/LineContent/index.module.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,oBAAoB;AACtB\",\"sourcesContent\":[\".lineContent {\\n  user-select: initial;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"lineContent\": \"d3v5nUP2ymrR7xpAsXiO\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".huJAM1ITwkQTnpM4LoaE {\\n  display: inline-flex;\\n  overflow: hidden;\\n  min-width: 20px;\\n  padding-right: 0.5em;\\n\\n  color: #a7a7a7;\\n  text-decoration: none;\\n  user-select: none;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/LineGutter/index.module.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,oBAAoB;EACpB,gBAAgB;EAChB,eAAe;EACf,oBAAoB;;EAEpB,cAAc;EACd,qBAAqB;EACrB,iBAAiB;AACnB\",\"sourcesContent\":[\".lineGutter {\\n  display: inline-flex;\\n  overflow: hidden;\\n  min-width: 20px;\\n  padding-right: 0.5em;\\n\\n  color: #a7a7a7;\\n  text-decoration: none;\\n  user-select: none;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"lineGutter\": \"huJAM1ITwkQTnpM4LoaE\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".DMh7HyMQwlCtuVLXTCmn {\\n  display: inline-block;\\n  width: 55px;\\n  margin-left: 15px;\\n  margin-right: 15px;\\n  color: #7e7e7e;\\n  user-select: none;\\n  text-align: right;\\n  min-width: 40px;\\n  cursor: pointer;\\n  text-decoration: none;\\n  padding-right: 1em\\n}\\n\\n.DMh7HyMQwlCtuVLXTCmn::before {\\n  content: attr(id);\\n}\\n\\n.HrRLdt1xPwxruiDaCGYD {\\n  color: #ffffff;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/LineNumber/index.module.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,qBAAqB;EACrB,WAAW;EACX,iBAAiB;EACjB,kBAAkB;EAClB,cAAc;EACd,iBAAiB;EACjB,iBAAiB;EACjB,eAAe;EACf,eAAe;EACf,qBAAqB;EACrB;AACF;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EAEE,cAAc;AAChB\",\"sourcesContent\":[\".lineNumber {\\n  display: inline-block;\\n  width: 55px;\\n  margin-left: 15px;\\n  margin-right: 15px;\\n  color: #7e7e7e;\\n  user-select: none;\\n  text-align: right;\\n  min-width: 40px;\\n  cursor: pointer;\\n  text-decoration: none;\\n  padding-right: 1em\\n}\\n\\n.lineNumber::before {\\n  content: attr(id);\\n}\\n\\n.lineNumberHighlight {\\n  composes: lineNumber;\\n  color: #ffffff;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"lineNumber\": \"DMh7HyMQwlCtuVLXTCmn\",\n\t\"lineNumberHighlight\": \"HrRLdt1xPwxruiDaCGYD DMh7HyMQwlCtuVLXTCmn\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".leEWKOOGbRrFk9oLyGJw { font-weight: bold; }\\n.cwO6m9RD3FtcLp6R2zWJ { text-decoration: underline; }\\n.Mbi0PXbaAM2cw26mMfI7 { font-style: italic; }\\n\\n.vSJtg8oPUNXM7GO7izKr { color: #4e4e4e; }\\n.cY7MIihzPxGdT3pSiFLA { color: #ff6c60; }\\n.rF8fdIFbwCaruUEwRiyC { color: #00aa00; }\\n.HEaQ5ZAB4kn0y6zMPLyg { color: #ffffb6; }\\n.lom08i464eBC88nvhRtP { color: #96cbfe; }\\n.Ag55Pv0J9ipGERCQk1_B { color: #ff73fd; }\\n.HhUnxMrRT46TWatIMOpg { color: #00aaaa; }\\n.FgIiS2dgrTvd6dkkbrEW { color: #eeeeee; }\\n.MoPvpbuRME6zEx1VEX0o { color: #969696; }\\n\\n.TgRAFPTvMPnmRV8HkK48 { color: #7c7c7c; }\\n.DQ54Hg3iw5YdW2jONxmc { color: #ff9b93; }\\n.pWIiXmmlCcXEyMOk81d5 { color: #ceffab }\\n.qVuukjdBH7Tg7lCEr85z { color: #ffffcb; }\\n.DqNvuTvrbh61MBCnqhL8 { color: #b5dcfe; }\\n.kIaV4TsQ6gXhZrVWvyOg { color: #ff9cfe; }\\n.YbTYPQsOncZq0gb0Lx_e { color: #55ffff; }\\n.hOsYCSNPcZ3aP_vGpdzS { color: #ffffff; }\\n.injFD873JuoTKj70V6gQ { color: #969696; }\\n\\n.t6SQhRMUQAy3KkIY7RCz { background-color: #4e4e4e; }\\n.qlHBoKNuVChBd1JYaOFA { background-color: #ff6c60; }\\n.ZdytVHvo7LKp4Is0nN5b { background-color: #00aa00; }\\n.TtJOE4V_zQLe6UV2nbNS { background-color: #ffffb6; }\\n.Z2rcIVsUGQTiKPpS59AY { background-color: #96cbfe; }\\n.Wpqn06yNsnnmv1fGa8Kg { background-color: #ff73fd; }\\n.MdfUwTNEZDl254kb_dBU { background-color: #00aaaa; }\\n.DTVXVkiOMiCPgzQKdnRu { background-color: #eeeeee; }\\n.h0YIHLxzbLqY4Gy5urXg { background-color: #969696; }\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/LinePart/index.module.css\"],\"names\":[],\"mappings\":\"AAAA,wBAAQ,iBAAiB,EAAE;AAC3B,wBAAa,0BAA0B,EAAE;AACzC,wBAAU,kBAAkB,EAAE;;AAE9B,wBAAS,cAAc,EAAE;AACzB,wBAAO,cAAc,EAAE;AACvB,wBAAS,cAAc,EAAE;AACzB,wBAAU,cAAc,EAAE;AAC1B,wBAAQ,cAAc,EAAE;AACxB,wBAAW,cAAc,EAAE;AAC3B,wBAAQ,cAAc,EAAE;AACxB,wBAAS,cAAc,EAAE;AACzB,wBAAQ,cAAc,EAAE;;AAExB,wBAAa,cAAc,EAAE;AAC7B,wBAAW,cAAc,EAAE;AAC3B,wBAAa,eAAe;AAC5B,wBAAc,cAAc,EAAE;AAC9B,wBAAY,cAAc,EAAE;AAC5B,wBAAe,cAAc,EAAE;AAC/B,wBAAY,cAAc,EAAE;AAC5B,wBAAa,cAAc,EAAE;AAC7B,wBAAY,cAAc,EAAE;;AAE5B,wBAAW,yBAAyB,EAAE;AACtC,wBAAS,yBAAyB,EAAE;AACpC,wBAAW,yBAAyB,EAAE;AACtC,wBAAY,yBAAyB,EAAE;AACvC,wBAAU,yBAAyB,EAAE;AACrC,wBAAa,yBAAyB,EAAE;AACxC,wBAAU,yBAAyB,EAAE;AACrC,wBAAW,yBAAyB,EAAE;AACtC,wBAAU,yBAAyB,EAAE\",\"sourcesContent\":[\".bold { font-weight: bold; }\\n.underline { text-decoration: underline; }\\n.italic { font-style: italic; }\\n\\n.black { color: #4e4e4e; }\\n.red { color: #ff6c60; }\\n.green { color: #00aa00; }\\n.yellow { color: #ffffb6; }\\n.blue { color: #96cbfe; }\\n.magenta { color: #ff73fd; }\\n.cyan { color: #00aaaa; }\\n.white { color: #eeeeee; }\\n.grey { color: #969696; }\\n\\n.blackBold { color: #7c7c7c; }\\n.redBold { color: #ff9b93; }\\n.greenBold { color: #ceffab }\\n.yellowBold { color: #ffffcb; }\\n.blueBold { color: #b5dcfe; }\\n.magentaBold { color: #ff9cfe; }\\n.cyanBold { color: #55ffff; }\\n.whiteBold { color: #ffffff; }\\n.greyBold { color: #969696; }\\n\\n.blackBg { background-color: #4e4e4e; }\\n.redBg { background-color: #ff6c60; }\\n.greenBg { background-color: #00aa00; }\\n.yellowBg { background-color: #ffffb6; }\\n.blueBg { background-color: #96cbfe; }\\n.magentaBg { background-color: #ff73fd; }\\n.cyanBg { background-color: #00aaaa; }\\n.whiteBg { background-color: #eeeeee; }\\n.greyBg { background-color: #969696; }\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"bold\": \"leEWKOOGbRrFk9oLyGJw\",\n\t\"underline\": \"cwO6m9RD3FtcLp6R2zWJ\",\n\t\"italic\": \"Mbi0PXbaAM2cw26mMfI7\",\n\t\"black\": \"vSJtg8oPUNXM7GO7izKr\",\n\t\"red\": \"cY7MIihzPxGdT3pSiFLA\",\n\t\"green\": \"rF8fdIFbwCaruUEwRiyC\",\n\t\"yellow\": \"HEaQ5ZAB4kn0y6zMPLyg\",\n\t\"blue\": \"lom08i464eBC88nvhRtP\",\n\t\"magenta\": \"Ag55Pv0J9ipGERCQk1_B\",\n\t\"cyan\": \"HhUnxMrRT46TWatIMOpg\",\n\t\"white\": \"FgIiS2dgrTvd6dkkbrEW\",\n\t\"grey\": \"MoPvpbuRME6zEx1VEX0o\",\n\t\"blackBold\": \"TgRAFPTvMPnmRV8HkK48\",\n\t\"redBold\": \"DQ54Hg3iw5YdW2jONxmc\",\n\t\"greenBold\": \"pWIiXmmlCcXEyMOk81d5\",\n\t\"yellowBold\": \"qVuukjdBH7Tg7lCEr85z\",\n\t\"blueBold\": \"DqNvuTvrbh61MBCnqhL8\",\n\t\"magentaBold\": \"kIaV4TsQ6gXhZrVWvyOg\",\n\t\"cyanBold\": \"YbTYPQsOncZq0gb0Lx_e\",\n\t\"whiteBold\": \"hOsYCSNPcZ3aP_vGpdzS\",\n\t\"greyBold\": \"injFD873JuoTKj70V6gQ\",\n\t\"blackBg\": \"t6SQhRMUQAy3KkIY7RCz\",\n\t\"redBg\": \"qlHBoKNuVChBd1JYaOFA\",\n\t\"greenBg\": \"ZdytVHvo7LKp4Is0nN5b\",\n\t\"yellowBg\": \"TtJOE4V_zQLe6UV2nbNS\",\n\t\"blueBg\": \"Z2rcIVsUGQTiKPpS59AY\",\n\t\"magentaBg\": \"Wpqn06yNsnnmv1fGa8Kg\",\n\t\"cyanBg\": \"MdfUwTNEZDl254kb_dBU\",\n\t\"whiteBg\": \"DTVXVkiOMiCPgzQKdnRu\",\n\t\"greyBg\": \"h0YIHLxzbLqY4Gy5urXg\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".DtUnj6RbYL2EfbHanFmG {\\n  margin: 0;\\n  user-select: none;\\n}\\n\\n.DtUnj6RbYL2EfbHanFmG:hover {\\n  background-color: #444444;\\n}\\n\\n.XOQNF430MiSY9Ai6MvxM {\\n  background-color: #666666;\\n}\\n\\n.HOxYa7ivGH4mSwdyhCZg {\\n  user-select: text;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/Line/index.module.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,SAAS;EACT,iBAAiB;AACnB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,iBAAiB;AACnB\",\"sourcesContent\":[\".line {\\n  margin: 0;\\n  user-select: none;\\n}\\n\\n.line:hover {\\n  background-color: #444444;\\n}\\n\\n.lineHighlight {\\n  background-color: #666666;\\n}\\n\\n.lineSelectable {\\n  user-select: text;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"line\": \"DtUnj6RbYL2EfbHanFmG\",\n\t\"lineHighlight\": \"XOQNF430MiSY9Ai6MvxM\",\n\t\"lineSelectable\": \"HOxYa7ivGH4mSwdyhCZg\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".d1Ny9UfcA85Y1JU7LpSw {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translateX(-50%) translateY(-50%);\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/Loading/index.module.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,4CAA4C;AAC9C\",\"sourcesContent\":[\".loading {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translateX(-50%) translateY(-50%);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"loading\": \"d1Ny9UfcA85Y1JU7LpSw\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".nUoEkz_AFUyXnER9IH9x {\\n    height: 15px;\\n    cursor: pointer;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/SearchBar/ArrowIcons/DownArrowIcon/index.module.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,YAAY;IACZ,eAAe;AACnB\",\"sourcesContent\":[\".downArrowIcon {\\n    height: 15px;\\n    cursor: pointer;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"downArrowIcon\": \"nUoEkz_AFUyXnER9IH9x\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".KrrOfU4wyyouhNdb7sr5 {\\n    height: 15px;\\n    cursor: pointer;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/SearchBar/ArrowIcons/UpArrowIcon/index.module.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,YAAY;IACZ,eAAe;AACnB\",\"sourcesContent\":[\".upArrowIcon {\\n    height: 15px;\\n    cursor: pointer;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"upArrowIcon\": \"KrrOfU4wyyouhNdb7sr5\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".beIYAGOiZxZ5c9B8EwjG {\\n  height: 15px;\\n  cursor: pointer;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/SearchBar/FilterLinesIcon/index.module.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,YAAY;EACZ,eAAe;AACjB\",\"sourcesContent\":[\".filterLinesIcon {\\n  height: 15px;\\n  cursor: pointer;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"filterLinesIcon\": \"beIYAGOiZxZ5c9B8EwjG\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".oKZDMpzpjrZiU_Nr0inQ {\\n    display: flex;\\n    align-items: center;\\n    justify-content: flex-end;\\n    font-family: \\\"Monaco\\\", monospace;\\n    font-size: 12px;\\n    background-color: #222222;\\n    color: #d6d6d6;\\n    padding: 10px;\\n}\\n\\n.xpuWeYsCEzX4Ee9rYk9x {\\n    background-color: #464646;\\n    color: #d6d6d6;\\n    height: 20px;\\n    min-width: 200px;\\n    font-size: 12px;\\n    padding: 2px 5px;\\n    border: 1px solid #4e4e4e;\\n    margin-right: 10px;\\n}\\n\\n.WsrNQAZ1YHXm1JFohLR3 {\\n    color: #d6d6d6;\\n    fill: #d6d6d6;\\n}\\n\\n.Cn6DUMz7rI_7ph0mUwwa:hover {\\n    border-radius: 5px;\\n    background: #666666;\\n}\\n\\n.BZ5myiH_qfgJr9VfoojF {\\n    color: #464646;\\n    fill: #464646;\\n    padding: 3px;\\n    padding-bottom: 1px;\\n}\\n\\n.Pr6Y85_7Zoy3TIUwTs1R {\\n    background: none;\\n    border: none;\\n    margin-right: 10px;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/SearchBar/index.module.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,aAAa;IACb,mBAAmB;IACnB,yBAAyB;IACzB,gCAAgC;IAChC,eAAe;IACf,yBAAyB;IACzB,cAAc;IACd,aAAa;AACjB;;AAEA;IACI,yBAAyB;IACzB,cAAc;IACd,YAAY;IACZ,gBAAgB;IAChB,eAAe;IACf,gBAAgB;IAChB,yBAAyB;IACzB,kBAAkB;AACtB;;AAEA;IACI,cAAc;IACd,aAAa;AACjB;;AAEA;IACI,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,cAAc;IACd,aAAa;IACb,YAAY;IACZ,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;IAChB,YAAY;IACZ,kBAAkB;AACtB\",\"sourcesContent\":[\".searchBar {\\n    display: flex;\\n    align-items: center;\\n    justify-content: flex-end;\\n    font-family: \\\"Monaco\\\", monospace;\\n    font-size: 12px;\\n    background-color: #222222;\\n    color: #d6d6d6;\\n    padding: 10px;\\n}\\n\\n.searchInput {\\n    background-color: #464646;\\n    color: #d6d6d6;\\n    height: 20px;\\n    min-width: 200px;\\n    font-size: 12px;\\n    padding: 2px 5px;\\n    border: 1px solid #4e4e4e;\\n    margin-right: 10px;\\n}\\n\\n.active {\\n    color: #d6d6d6;\\n    fill: #d6d6d6;\\n}\\n\\n.clickable:hover {\\n    border-radius: 5px;\\n    background: #666666;\\n}\\n\\n.inactive {\\n    color: #464646;\\n    fill: #464646;\\n    padding: 3px;\\n    padding-bottom: 1px;\\n}\\n\\n.button {\\n    background: none;\\n    border: none;\\n    margin-right: 10px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"searchBar\": \"oKZDMpzpjrZiU_Nr0inQ\",\n\t\"searchInput\": \"xpuWeYsCEzX4Ee9rYk9x\",\n\t\"active\": \"WsrNQAZ1YHXm1JFohLR3\",\n\t\"clickable\": \"Cn6DUMz7rI_7ph0mUwwa\",\n\t\"inactive\": \"BZ5myiH_qfgJr9VfoojF\",\n\t\"button\": \"Pr6Y85_7Zoy3TIUwTs1R\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":[],"sourceRoot":""}